{
  "contractName": "SmallBusiness",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_customerAddress",
          "type": "address"
        }
      ],
      "name": "PostProject",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_customerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "chooseTheProject",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "logAddCustomer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "logAddEngineers",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Engineers",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "engineerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "Name",
          "type": "string"
        },
        {
          "internalType": "enum SmallBusiness.State",
          "name": "state",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "customers",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "customerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "Name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "deal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "offers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "day",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "moreInform",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "projects",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "Name",
          "type": "string"
        },
        {
          "internalType": "enum SmallBusiness.State",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "skills",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "information",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "averageOfprice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "customerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "yourName",
          "type": "string"
        }
      ],
      "name": "addCustomer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_engineerAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_yourName",
          "type": "string"
        }
      ],
      "name": "addEngineer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "Name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "skills",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "information",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "averageOfprice",
          "type": "uint256"
        }
      ],
      "name": "addProject",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customerAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "day",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "information",
          "type": "string"
        }
      ],
      "name": "chooseToWork",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_engineerAddress",
          "type": "address"
        }
      ],
      "name": "accepteCustomer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_skills",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_information",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_averageOfprice",
          "type": "uint256"
        }
      ],
      "name": "EditProject",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customerAddress",
          "type": "address"
        }
      ],
      "name": "getProject",
      "outputs": [
        {
          "internalType": "string",
          "name": "Name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "skills",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "information",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "averageOfprice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_customerAddress",
          "type": "address"
        }
      ],
      "name": "deleteProject",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_passthevalue",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"}],\"name\":\"PostProject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"chooseTheProject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"logAddCustomer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"logAddEngineers\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_skills\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_information\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_averageOfprice\",\"type\":\"uint256\"}],\"name\":\"EditProject\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Engineers\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"engineerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"enum SmallBusiness.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_passthevalue\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_engineerAddress\",\"type\":\"address\"}],\"name\":\"accepteCustomer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"yourName\",\"type\":\"string\"}],\"name\":\"addCustomer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_engineerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_yourName\",\"type\":\"string\"}],\"name\":\"addEngineer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"skills\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"information\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"averageOfprice\",\"type\":\"uint256\"}],\"name\":\"addProject\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"day\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"information\",\"type\":\"string\"}],\"name\":\"chooseToWork\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customers\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"customerAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"}],\"name\":\"deleteProject\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_customerAddress\",\"type\":\"address\"}],\"name\":\"getProject\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"skills\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"information\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"averageOfprice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"offers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"day\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"moreInform\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"projects\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"enum SmallBusiness.State\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"skills\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"information\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"averageOfprice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PostProject(address)\":{\"params\":{\"_customerAddress\":\"is the address of Project\"}},\"chooseTheProject(address,uint256)\":{\"params\":{\"_customerAddress\":\"is the address of Project\",\"price\":\"is the price that customer send to Engineer\"}},\"logAddCustomer(address)\":{\"params\":{\"_address\":\"Engineer address\"}},\"logAddEngineers(address)\":{\"params\":{\"_address\":\"customer address\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"PostProject(address)\":{\"notice\":\"Emitted when a Project is posted \"},\"chooseTheProject(address,uint256)\":{\"notice\":\"Emitted when Engineer add a price for working on project \"},\"logAddCustomer(address)\":{\"notice\":\"Emitted when a Engineer is registred \"},\"logAddEngineers(address)\":{\"notice\":\"Emitted when a customer is registred \"}},\"kind\":\"user\",\"methods\":{\"accepteCustomer(address)\":{\"notice\":\"Allows a customer for view the price of the project that engineer add it and payed that price.\"},\"addCustomer(address,string)\":{\"notice\":\"Allows to add a new customer in the network.\"},\"addEngineer(address,string)\":{\"notice\":\"Allows to add a new engineer in the network.\"},\"addProject(string,string,string,uint256)\":{\"notice\":\"add Project`s id in to mapping check the state of project should be forSell check the modifier is customer to call that function  the customer should call that function\"},\"deleteProject(address)\":{\"notice\":\"Allows the customer for delete the project\"},\"getProject(address)\":{\"notice\":\"Allows a Engineer and customer and users for view the project.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/C/Users/sodaba ulomi/Desktop/wslapp/contracts/SmallBusiness.sol\":\"SmallBusiness\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/sodaba ulomi/Desktop/wslapp/contracts/InterfaceOfCuntract.sol\":{\"keccak256\":\"0x96deec6fe7e5f3a97ea5b3bd86c3f535adae9cf7fcc98d690fe47bf85fc377e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e13d14dca65152282933847b87e9c2bc6e0d9a82fb6119b24f8e0efc973498c4\",\"dweb:/ipfs/QmRMorQDnbFcRu1RosgcNdVKktjYEZZssg6rh1VwyJV6sa\"]},\"/C/Users/sodaba ulomi/Desktop/wslapp/contracts/SmallBusiness.sol\":{\"keccak256\":\"0x5c2523190aa83292be84274958dbac7f44336688ae9657fe222f6a820219ea64\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://918d4ce7a0f937f8e06b3e6a666ecdd9d97aca24f2b51bdde682c03165cb4a53\",\"dweb:/ipfs/QmaFjxc219oyVGqCct76hUDJQXouVjAbXMd5NuzLst63bQ\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c806378e4f9341161008a578063a871ca5d11610059578063a871ca5d14610bbf578063aede609814610cbd578063cea1a67a14610f36578063f987070514610fc6576100f3565b806378e4f93414610733578063840e78fd146108a857806388bc815014610a805780638da5cb5b14610b7e576100f3565b8063336989ae116100c6578063336989ae146104ef5780633d8f426d146105d6578063413bf38f14610630578063553df02114610708576100f3565b806303bc470d146100f857806312065fe0146101f157806320943f7a1461021c5780632200e21e14610425575b600080fd5b34801561010457600080fd5b506101476004803603602081101561011b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061116f565b604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018060200183600381111561017757fe5b8152602001828103825284818151815260200191508051906020019080838360005b838110156101b4578082015181840152602081019050610199565b50505050905090810190601f1680156101e15780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156101fd57600080fd5b5061020661125e565b6040518082815260200191505060405180910390f35b61040d6004803603608081101561023257600080fd5b810190808035906020019064010000000081111561024f57600080fd5b82018360208201111561026157600080fd5b8035906020019184600183028401116401000000008311171561028357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102e657600080fd5b8201836020820111156102f857600080fd5b8035906020019184600183028401116401000000008311171561031a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561037d57600080fd5b82018360208201111561038f57600080fd5b803590602001918460018302840111640100000000831117156103b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611266565b60405180821515815260200191505060405180910390f35b34801561043157600080fd5b506104746004803603602081101561044857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115c5565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156104b4578082015181840152602081019050610499565b50505050905090810190601f1680156104e15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156104fb57600080fd5b5061053e6004803603602081101561051257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611885565b604051808373ffffffffffffffffffffffffffffffffffffffff16815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561059a57808201518184015260208101905061057f565b50505050905090810190601f1680156105c75780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b610618600480360360208110156105ec57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611961565b60405180821515815260200191505060405180910390f35b34801561063c57600080fd5b5061067f6004803603602081101561065357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fca565b6040518084815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156106cb5780820151818401526020810190506106b0565b50505050905090810190601f1680156106f85780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561071457600080fd5b5061071d61208c565b6040518082815260200191505060405180910390f35b34801561073f57600080fd5b5061082d6004803603608081101561075657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190803590602001906401000000008111156107a757600080fd5b8201836020820111156107b957600080fd5b803590602001918460018302840111640100000000831117156107db57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612092565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561086d578082015181840152602081019050610852565b50505050905090810190601f16801561089a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156108b457600080fd5b506108f7600480360360208110156108cb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125e2565b604051808773ffffffffffffffffffffffffffffffffffffffff1681526020018060200186600381111561092757fe5b81526020018060200180602001858152602001848103845289818151815260200191508051906020019080838360005b83811015610972578082015181840152602081019050610957565b50505050905090810190601f16801561099f5780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156109d85780820151818401526020810190506109bd565b50505050905090810190601f168015610a055780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b83811015610a3e578082015181840152602081019050610a23565b50505050905090810190601f168015610a6b5780820380516001836020036101000a031916815260200191505b50995050505050505050505060405180910390f35b348015610a8c57600080fd5b50610b6660048036036040811015610aa357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610ae057600080fd5b820183602082011115610af257600080fd5b80359060200191846001830284011164010000000083111715610b1457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612813565b60405180821515815260200191505060405180910390f35b348015610b8a57600080fd5b50610b93612a2e565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610bcb57600080fd5b50610ca560048036036040811015610be257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190640100000000811115610c1f57600080fd5b820183602082011115610c3157600080fd5b80359060200191846001830284011164010000000083111715610c5357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612a52565b60405180821515815260200191505060405180910390f35b348015610cc957600080fd5b50610ebb60048036036080811015610ce057600080fd5b8101908080359060200190640100000000811115610cfd57600080fd5b820183602082011115610d0f57600080fd5b80359060200191846001830284011164010000000083111715610d3157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610d9457600080fd5b820183602082011115610da657600080fd5b80359060200191846001830284011164010000000083111715610dc857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610e2b57600080fd5b820183602082011115610e3d57600080fd5b80359060200191846001830284011164010000000083111715610e5f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050612cc5565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610efb578082015181840152602081019050610ee0565b50505050905090810190601f168015610f285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610f4257600080fd5b50610f4b613265565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610f8b578082015181840152602081019050610f70565b50505050905090810190601f168015610fb85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610fd257600080fd5b5061101560048036036020811015610fe957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613438565b60405180806020018060200180602001858152602001848103845288818151815260200191508051906020019080838360005b83811015611063578082015181840152602081019050611048565b50505050905090810190601f1680156110905780820380516001836020036101000a031916815260200191505b50848103835287818151815260200191508051906020019080838360005b838110156110c95780820151818401526020810190506110ae565b50505050905090810190601f1680156110f65780820380516001836020036101000a031916815260200191505b50848103825286818151815260200191508051906020019080838360005b8381101561112f578082015181840152602081019050611114565b50505050905090810190601f16801561115c5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b60056020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112415780601f1061121657610100808354040283529160200191611241565b820191906000526020600020905b81548152906001019060200180831161122457829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b600047905090565b6000338073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112a157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff16600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146113a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f746869732070726f6a65637420616c72656164792069732065786973742e000081525060200191505060405180910390fd5b823410156113fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c81526020018061393f603c913960400191505060405180910390fd5b6040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018781526020016000600381111561143857fe5b815260200186815260200185815260200184815250600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906114ef929190613893565b5060408201518160020160006101000a81548160ff0219169083600381111561151457fe5b02179055506060820151816003019080519060200190611535929190613893565b506080820151816004019080519060200190611552929190613893565b5060a0820151816005015590505060018054016001819055507fc90a5997158125d11f471581d0f9c698a86d5f9b21d81eccee8f78d4d37327c133604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a16001915050949350505050565b6060338073ffffffffffffffffffffffffffffffffffffffff16600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146116cb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f74686973206163636f756e74206973206e6f7420437573746f6d65722e00000081525060200191505060405180910390fd5b6000600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060400160405280600181526020017f200000000000000000000000000000000000000000000000000000000000000081525081600101908051906020019061179f929190613893565b506040518060400160405280600181526020017f20000000000000000000000000000000000000000000000000000000000000008152508160030190805190602001906117ed929190613893565b506040518060400160405280600181526020017f200000000000000000000000000000000000000000000000000000000000000081525081600401908051906020019061183b929190613893565b50600081600501819055506040518060400160405280601681526020017f7468652070726f6a656374207761732064656c6574650000000000000000000081525092505050919050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119575780601f1061192c57610100808354040283529160200191611957565b820191906000526020600020905b81548152906001019060200180831161193a57829003601f168201915b5050505050905082565b6000338073ffffffffffffffffffffffffffffffffffffffff16600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a67576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f74686973206163636f756e74206973206e6f7420437573746f6d65722e00000081525060200191505060405180910390fd5b33600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611b6d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b60006003811115611b7a57fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166003811115611bd557fe5b14611c48576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d4b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f74686973206163636f756e74206973206e6f7420616e20656e67696e6565720081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611e4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f7468697320637573746f6d6572206973206e6f742045786973742e000000000081525060200191505060405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060018160020160006101000a81548160ff02191690836003811115611eb257fe5b02179055506000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600560008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc670de0b6b3a76400008560000154029081150290604051600060405180830381858888f19350505050158015611fba573d6000803e3d6000fd5b5060019650505050505050919050565b6003602052806000526040600020600091509050806000015490806001015490806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120825780601f1061205757610100808354040283529160200191612082565b820191906000526020600020905b81548152906001019060200180831161206557829003601f168201915b5050505050905083565b60015481565b6060338073ffffffffffffffffffffffffffffffffffffffff16600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612198576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f63616c6c65722069736e6f7420456e67696e656572000000000000000000000081525060200191505060405180910390fd5b85600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561229e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b600060038111156122ab57fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600381111561230657fe5b14612379576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b6002600381111561238657fe5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1660038111156123e157fe5b14612454576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f74686973206163636f756e7420616c7265616479207365742076616c7565000081525060200191505060405180910390fd5b604051806060016040528086815260200187815260200185815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001556020820151816001015560408201518160020190805190602001906124de929190613893565b509050506003808111156124ee57fe5b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff16600381111561254957fe5b50507f140ba8a8a70ea6896f415e662fe4a3493133537db4dcd56586070e42253d9b433386604051808373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390a16040518060400160405280601481526020017f7365742076616c7565206f6e2070726f6a65637400000000000000000000000081525092505050949350505050565b60066020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156126b45780601f10612689576101008083540402835291602001916126b4565b820191906000526020600020905b81548152906001019060200180831161269757829003601f168201915b5050505050908060020160009054906101000a900460ff1690806003018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156127655780601f1061273a57610100808354040283529160200191612765565b820191906000526020600020905b81548152906001019060200180831161274857829003601f168201915b505050505090806004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128035780601f106127d857610100808354040283529160200191612803565b820191906000526020600020905b8154815290600101906020018083116127e657829003601f168201915b5050505050908060050154905086565b60008073ffffffffffffffffffffffffffffffffffffffff16600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146128fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061397b6021913960400191505060405180910390fd5b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815250600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190805190602001906129c8929190613893565b509050507f67db2594560e9767e8eec7f82a7ee7777909a9c55f1dc6ba490d7ef45ffcecfd83604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160018054016001819055506001905092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008073ffffffffffffffffffffffffffffffffffffffff16600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612b57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f74686973206164647265737320616c7265616479207265676973747265642e0081525060200191505060405180910390fd5b60405180606001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160026003811115612b9157fe5b815250600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190612c36929190613893565b5060408201518160020160006101000a81548160ff02191690836003811115612c5b57fe5b02179055509050507f9cd3b8c22eaf60823d8598cfb11eba80932bdb7e58442e690e6368677ac8159383604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a160018054016001819055506001905092915050565b6060338073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612d0057600080fd5b33600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612e06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b60006003811115612e1357fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff166003811115612e6e57fe5b14612ee1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561301c5780601f10612ff15761010080835404028352916020019161301c565b820191906000526020600020905b815481529060010190602001808311612fff57829003601f168201915b505050505081526020016002820160009054906101000a900460ff16600381111561304357fe5b600381111561304e57fe5b8152602001600382018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156130eb5780601f106130c0576101008083540402835291602001916130eb565b820191906000526020600020905b8154815290600101906020018083116130ce57829003601f168201915b50505050508152602001600482018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561318d5780601f106131625761010080835404028352916020019161318d565b820191906000526020600020905b81548152906001019060200180831161317057829003601f168201915b50505050508152602001600582015481525050905033816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508781602001819052506000816040019060038111156131f557fe5b9081600381111561320257fe5b81525050868160600181905250858160800181905250848160a00181815250506040518060400160405280601681526020017f7468652070726f6a6563742077617320757064617465000000000000000000008152509350505050949350505050565b60606000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600160038111156132b757fe5b8160020160009054906101000a900460ff1660038111156132d457fe5b14613347576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f746869732070726f6a65637420776173206e6f742066696e697368000000000081525060200191505060405180910390fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060004790508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156133f9573d6000803e3d6000fd5b506040518060400160405280601381526020017f7468652076616c75652069732072657475726e00000000000000000000000000815250935050505090565b60608060606000338073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461347857600080fd5b85600073ffffffffffffffffffffffffffffffffffffffff16600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561357e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f5468652070726f6a656374206973206e6f74206e6f7468696e6700000000000081525060200191505060405180910390fd5b6000600381111561358b57fe5b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900460ff1660038111156135e657fe5b14613659576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f7468652070726f6a6563742068617320616c726561647920646f6e652e2e000081525060200191505060405180910390fd5b6000600660008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010181600301826004018360050154838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156137425780601f1061371757610100808354040283529160200191613742565b820191906000526020600020905b81548152906001019060200180831161372557829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156137de5780601f106137b3576101008083540402835291602001916137de565b820191906000526020600020905b8154815290600101906020018083116137c157829003601f168201915b50505050509250818054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561387a5780601f1061384f5761010080835404028352916020019161387a565b820191906000526020600020905b81548152906001019060200180831161385d57829003601f168201915b5050505050915096509650965096505050509193509193565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826138c95760008555613910565b82601f106138e257805160ff1916838001178555613910565b82800160010185558215613910579182015b8281111561390f5782518255916020019190600101906138f4565b5b50905061391d9190613921565b5090565b5b8082111561393a576000816000905550600101613922565b509056fe7468652076616c756520796f752073656e642073686f756c64206265206c657373207468616e20796f75722063757272656e7420617665726167652e74686973206164647265737320697320616c726561647920726567697374726564a264697066735822122020f36f5333c38763381d9c6a9ec440c7f054575fc520a7efa6a2995757c578e964736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "737:9068:2:-:0;;;872:9;:21;882:10;872:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;860:49;;;;;;;;;;;;;;;;;;;;4216:65;;;;;;;;;;4248:10;4240:5;;:18;;;;;;;;;;;;;;;;;;4273:1;4268:4;:6;;;;737:9068;;;;;;",
  "deployedSourceMap": "737:9068:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2662:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9707:94;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5679:766;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;8733:375;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2542:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6949:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2427:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:16;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6451:492;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2782:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4389:476;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;811:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4977:490;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7649:613;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9337:364;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8298:372;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2662:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9707:94::-;9751:4;9773:21;9766:28;;9707:94;:::o;5679:766::-;5869:4;5844:10;3031:8;3017:22;;:10;:22;;;3008:32;;;;;;5930:1:::1;5892:40;;:8;:20;5901:10;5892:20;;;;;;;;;;;;;;;:26;;;;;;;;;;;;:40;;;5884:92;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;6005:14;5994:9;:25;;5986:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6125:229;;;;;;;;6153:10;6125:229;;;;;;6182:4;6125:229;;;;6313:13;6125:229;;;;;;;;;;;;6207:6;6125:229;;;;6239:11;6125:229;;;;6279:14;6125:229;;::::0;6102:8:::1;:20;6111:10;6102:20;;;;;;;;;;;;;;;:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6378:1;6371:4:::0;::::1;:8;6364:4;:15;;;;6394:23;6406:10;6394:23;;;;;;;;;;;;;;;;;;;;6434:4;6427:11;;5679:766:::0;;;;;;;:::o;8733:375::-;8844:13;8819:10;3265:8;3226:47;;:9;:19;3236:8;3226:19;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:47;;;3217:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8869:17:::1;8889:8;:26;8898:16;8889:26;;;;;;;;;;;;;;;8869:46;;8942:1;8925;:7;;;:19;;;;;;;;;;;;;;;;;;8954:12;;;;;;;;;;;;;;;;::::0;:1:::1;:6;;:12;;;;;;;;;;;;:::i;:::-;;8976:14;;;;;;;;;;;;;;;;::::0;:1:::1;:8;;:14;;;;;;;;;;;;:::i;:::-;;9000:19;;;;;;;;;;;;;;;;::::0;:1:::1;:13;;:19;;;;;;;;;;;;:::i;:::-;;9048:1;9029;:16;;:20;;;;9069:31;;;;;;;;;;;;;;;;::::0;::::1;;;8733:375:::0;;;;:::o;2542:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6949:694::-;7083:4;7043:10;3265:8;3226:47;;:9;:19;3236:8;3226:19;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:47;;;3217:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7063:10:::1;3608:1;3564:46;;:8;:26;3573:16;3564:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;;3556:93;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3702:13;3666:49;;;;;;;;:8;:26;3675:16;3666:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:49;;;;;;;;;3658:99;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;7154:16:::2;7107:63;;:9;:27;7117:16;7107:27;;;;;;;;;;;;;;;:43;;;;;;;;;;;;:63;;;7099:120;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;7278:10;7237:51;;:9;:21;7247:10;7237:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:51;;;7229:104;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;7343:17;7363:8;:20;7372:10;7363:20;;;;;;;;;;;;;;;7343:40;;7403:12;7393:1;:7;;;:22;;;;;;;;;;;;;;;;;;;;;;;;7425:15;7443:6;:24;7450:16;7443:24;;;;;;;;;;;;;;;7425:42;;7477:18;7498:9;:27;7508:16;7498:27;;;;;;;;;;;;;;;7477:48;;7535:18;7556:1;:17;;;;;;;;;;;;7535:38;;7584:2;:11;;:31;7606:7;7596:1;:7;;;:18;7584:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;7632:4;7625:11;;;;;;3325:1:::1;6949:694:::0;;;;:::o;2427:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;838:16::-;;;;:::o;6451:492::-;6646:13;6579:10;3438:9;3399:48;;:9;:20;3409:9;3399:20;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:48;;;3391:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6601:16:::1;3608:1;3564:46;;:8;:26;3573:16;3564:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;;3556:93;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3702:13;3666:49;;;;;;;;:8;:26;3675:16;3666:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:49;;;;;;;;;3658:99;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;4135:14:::2;4104:45;;;;;;;;:9;:21;4114:10;4104:21;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:45;;;;;;;;;4096:96;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;6691:100:::3;;;;;;;;6718:5;6691:100;;;;6741:3;6691:100;;;;6769:11;6691:100;;::::0;6670:6:::3;:18;6677:10;6670:18;;;;;;;;;;;;;;;:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;6832:16;6801:47:::0;::::3;;;;;;;:9;:21;6811:10;6801:21;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:47;;;;;;;;::::0;;6863:34:::3;6880:10;6891:5;6863:34;;;;;;;;;;;;;;;;;;;;;;;;;;6907:29;;;;;;;;;;;;;;;;::::0;::::3;;3491:1:::1;6451:492:::0;;;;;;;:::o;2782:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4389:476::-;4507:4;4585:1;4531:56;;:9;:26;4541:15;4531:26;;;;;;;;;;;;;;;:42;;;;;;;;;;;;:56;;;4523:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4670:96;;;;;;;;4711:15;4670:96;;;;;;4747:8;4670:96;;;4643:9;:26;4653:15;4643:26;;;;;;;;;;;;;;;:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;4781:31;4796:15;4781:31;;;;;;;;;;;;;;;;;;;;4836:1;4829:4;;:8;4822:4;:15;;;;4854:4;4847:11;;4389:476;;;;:::o;811:20::-;;;;;;;;;;;;:::o;4977:490::-;5080:4;5158:1;5103:57;;:9;:27;5113:16;5103:27;;;;;;;;;;;;;;;:43;;;;;;;;;;;;:57;;;5095:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5244:132;;;;;;;;5285:16;5244:132;;;;;;5321:9;5244:132;;;;5351:14;5244:132;;;;;;;;;;;5214:9;:27;5224:16;5214:27;;;;;;;;;;;;;;;:162;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5387:33;5403:16;5387:33;;;;;;;;;;;;;;;;;;;;5441:1;5434:4;;:8;5427:4;:15;;;;5455:4;5448:11;;4977:490;;;;:::o;7649:613::-;7882:13;7825:10;3031:8;3017:22;;:10;:22;;;3008:32;;;;;;7853:10:::1;3608:1;3564:46;;:8;:26;3573:16;3564:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;;3556:93;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3702:13;3666:49;;;;;;;;:8;:26;3675:16;3666:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:49;;;;;;;;;3658:99;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;7926:16:::2;7945:8;:20;7954:10;7945:20;;;;;;;;;;;;;;;7926:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;7988:10;7978:1;:7;;:20;;;;;;;;;::::0;::::2;8020:5;8011:1;:6;;:14;;;;8047:13;8038:1;:7;;:22;;;;;;;;;;;;;;;;;;;;;::::0;::::2;8083:7;8073:1;:8;;:17;;;;8119:12;8103:1;:13;;:28;;;;8164:15;8144:1;:17;;:35;;;::::0;::::2;8223:31;;;;;;;;;;;;;;;;::::0;::::2;;;3047:1:::1;7649:613:::0;;;;;;;:::o;9337:364::-;9377:13;9401:17;9421:8;:20;9430:10;9421:20;;;;;;;;;;;;;;;9401:40;;9470:12;9459:23;;;;;;;;:1;:7;;;;;;;;;;;;:23;;;;;;;;;9451:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9524:18;9545:9;:21;9555:10;9545:21;;;;;;;;;;;;;;;:37;;;;;;;;;;;;9524:58;;9594:10;9607:21;9594:34;;9638:2;:11;;:18;9650:5;9638:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9666:28;;;;;;;;;;;;;;;;;;;;;;9337:364;:::o;8298:372::-;8439:18;8458:20;8484:25;8510:19;8383:10;3031:8;3017:22;;:10;:22;;;3008:32;;;;;;8408:16:::1;3608:1;3564:46;;:8;:26;3573:16;3564:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:46;;;;3556:93;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;3702:13;3666:49;;;;;;;;:8;:26;3675:16;3666:26;;;;;;;;;;;;;;;:32;;;;;;;;;;;;:49;;;;;;;;;3658:99;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;8549:17:::2;8569:8;:26;8578:16;8569:26;;;;;;;;;;;;;;;8549:46;;8613:1;:6;;8620:1;:8;;8629:1;:13;;8643:1;:16;;;8605:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3047:1:::1;8298:372:::0;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "\n// SPDX-License-Identifier: MIT\npragma solidity >=0.4.24 <0.9.0;\n// @title supply chain in small daily business \n/// @author veeda baha - <veedabaha@gmail.com>\n/// Allows the customer to add their project or works in to the network.\n/// Projects can be accessed by customers and Engineers .\n/// The customers can be shared or add ,get,edit and delete their projects \n/// The engineers can allow to see the record of the project.\n/// after the Engineer select a project for doing that set a value or price to that project.\n/// The custommer can see the price or value that Engineer add in to the system.\n/// The finilly the customer can accepte one of thoes values and payed the ether to engineer.\n\n import \"./InterfaceOfCuntract.sol\";\n\ncontract SmallBusiness is InterfaceOfCuntract{\n    \n    //  variables\n    address public owner ;\n    uint public deal;\n    address En =Engineers[msg.sender].engineerAddress;\n\n    //enum\n    enum State{\n      forSell,\n      Finish,\n      primsion,\n      unprmision\n    }\n  \n    //struct of customers\n    \n    struct customer{\n        address payable customerAddress;\n        string Name;\n    }\n    \n    //struct of Engineers\n    struct Engineer{\n      address payable engineerAddress;\n        string Name;\n        State state;\n       \n    }\n    \n    //struct of projects\n   struct Project{\n       address owner;\n        string Name;\n        State state;\n        string skills;\n        string information;\n        uint averageOfprice;\n     \n    }\n\n    // struct of offer\n    struct offer{\n        uint256 price;\n        uint256 day;\n        string moreInform;\n    }\n    \n    /* \n   * Events\n   */\n      /// @notice Emitted when a Engineer is registred \n    /// @param _address Engineer address\n    event logAddCustomer(address _address);\n\n    /// @notice Emitted when a customer is registred \n    /// @param _address customer address\n    event logAddEngineers(address _address);\n\n    /// @notice Emitted when a Project is posted \n    /// @param _customerAddress is the address of Project\n    event PostProject(address _customerAddress);\n\n    /// @notice Emitted when Engineer add a price for working on project \n    /// @param  _customerAddress is the address of Project\n    /// @param price is the price that customer send to Engineer\n    event chooseTheProject(address _customerAddress , uint price);\n  \n    //mapping\n    \n    // store the offers of the Engineers with their project id\n    mapping( address => offer) public offers;\n    \n    //store struct of customers in mapping with their addresses\n    mapping(address => customer) public customers;\n    \n    //store struct of Engineers in mapping with their addresses\n    mapping (address=> Engineer) public Engineers;\n    \n     //store struct of projects in mapping with their addresses\n    mapping (address => Project) public projects;\n    \n    /* \n   * Modifiers\n   */\n\n    // Create a modifer, isOwner that checks if the msg.sender is the owner of the contract\n\n    modifier verifyCaller (address _address) { \n    require (msg.sender == _address); \n    _;\n    }\n    \n    modifier isOwner () { \n    require (owner == msg.sender,\n    \"Caller is not owner\"); \n    _;\n    }\n \n    modifier isCustomer(address _address){\n        require( customers[_address].customerAddress == _address,\n        \"this account is not Customer.\");\n        _;\n    }\n    \n    modifier isEngineer(address _Engineer){\n        require(Engineers[_Engineer].engineerAddress== _Engineer,\n        \"caller isnot Engineer\");\n        _;\n    }\n\n    modifier forSell(address _customerAddress){\n       require(projects[_customerAddress].owner != address(0), \n       \"The project is not nothing\");\n       require(projects[_customerAddress].state == State.forSell,\n       \"the project has already done..\");\n       _;\n    }\n    \n    modifier Finish(address _customerAddress){\n       require(projects[_customerAddress].owner != address(0), \n       \"The project is not nothing\");\n       require(projects[_customerAddress].state == State.Finish,\n       \"this Project has already been for sell\");\n       _;\n    }\n    modifier verifyState(){\n        require(Engineers[msg.sender].state == State.primsion,\n        \"this account already set value\");\n        _;\n    }\n\n    constructor() {\n        owner = msg.sender;\n        deal=0;\n    }\n    \n    //add customer`s address in to mapping\n    //add the parameters of customer in to struct\n    \n    function addCustomer(address payable customerAddress , \n    string memory yourName) \n    public override \n    returns(bool) {\n        require(customers[customerAddress].customerAddress == address(0),\n        \"this address is already registred\");\n        customers[customerAddress]=customer({\n            customerAddress : customerAddress,\n            Name : yourName\n        });\n        emit logAddCustomer(customerAddress);\n        deal = deal + 1;\n        return true;\n    } \n    \n    \n    //add Engineers`s address in to mapping\n    //add more details in to Engineer`s struct\n    \n    function addEngineer(address payable _engineerAddress,string memory _yourName) public override returns(bool){\n        require(Engineers[_engineerAddress].engineerAddress == address(0),\n        \"this address already registred.\");\n        Engineers[_engineerAddress] = Engineer({\n            engineerAddress : _engineerAddress,\n            Name :_yourName,\n            state :State.primsion\n        });\n    emit logAddEngineers(_engineerAddress);\n     deal = deal + 1;\n    return true;\n\n    }\n    \n    ///add Project`s id in to mapping\n    ///check the state of project should be forSell\n    ///check the modifier is customer to call that function \n    ///the customer should call that function\n    \n    function addProject(string memory Name,\n    string memory skills,string memory information\n    ,uint averageOfprice ) \n    public override payable \n    verifyCaller(msg.sender) \n    returns(bool){\n        require(projects[msg.sender].owner == address(0), \n        \"this project already is exist.\");\n        require(msg.value>=averageOfprice,\n        \"the value you send should be less than your current average.\");\n        projects[msg.sender] = Project({\n            owner:msg.sender,\n            Name:Name,\n            skills:skills,\n            information:information,\n            averageOfprice:averageOfprice,\n            state:State.forSell\n           \n             });\n        deal = deal + 1;\n        emit PostProject(msg.sender);\n        return true;\n    }\n\n    function chooseToWork(address _customerAddress,uint256 day, uint price , string memory information)  public override isEngineer(msg.sender)   forSell(_customerAddress) verifyState() \n    returns(string memory){\n        offers[msg.sender] = offer({\n            price: price,\n            day:day,\n            moreInform:information\n        });\n        Engineers[msg.sender].state == State.unprmision;\n        emit chooseTheProject(msg.sender,price);\n        return \"set value on project\";\n    }\n\n    function accepteCustomer(address payable _engineerAddress) public payable override isCustomer(msg.sender) forSell(msg.sender) returns(bool) {\n        require(Engineers[_engineerAddress].engineerAddress == _engineerAddress ,\n            \"this account is not an engineer\");\n        require(customers[msg.sender].customerAddress == msg.sender ,\n            \"this customer is not Exist.\");\n        Project storage p = projects[msg.sender];\n        p.state = State.Finish;\n        offer storage o = offers[_engineerAddress];\n        Engineer storage e = Engineers[_engineerAddress];\n        address payable to = e.engineerAddress; \n        to.transfer(o.price *(1 ether));\n        return true;\n    }\n\n    function EditProject(string memory _name,\n        string memory _skills,\n        string memory _information,uint _averageOfprice )\n        public override\n        verifyCaller(msg.sender)\n        forSell(msg.sender)\n        returns (string memory)   \n        { \n      \n        Project memory p = projects[msg.sender];\n           p.owner = msg.sender;\n           p.Name = _name;\n           p.state= State.forSell;\n           p.skills= _skills;\n           p.information = _information;\n           p. averageOfprice = _averageOfprice;\n          \n             \n        \n        return \"the project was update\"; \n    }\n\n    // get project parameters\n    function getProject(address _customerAddress) public view override \n    verifyCaller(msg.sender) \n    forSell(_customerAddress)\n    returns (string memory Name,string memory skills,\n    string memory information,uint averageOfprice )   \n    {\n        Project storage p = projects[_customerAddress];\n        return (p.Name,p.skills,p.information,p.averageOfprice  ); \n    }\n    \n\n    //can delete the project with the id of project\n    function deleteProject(address _customerAddress) \n    public override \n    isCustomer(msg.sender) \n    returns(string memory){\n\n        Project storage p = projects[_customerAddress];\n        p.owner= address(0);\n        p.Name = \" \";\n        p.skills = \" \";\n        p.information = \" \";\n        p.averageOfprice = 0 ;\n        \n        return \"the project was delete\";\n\n    }\n\n\n    // function paymentFull() public view  returns(uint){\n    //     uint day =offers[msg.sender].day;\n    //     uint a =day-(day*1/2);\n    //     // require(offers[msg.sender].day == a )\n    //     return a;\n\n    // }\n\n\n    function _passthevalue() public returns(string memory){\n        Project storage p = projects[msg.sender];\n        require(p.state == State.Finish ,\"this project was not finish\");\n        address payable to = customers[msg.sender].customerAddress ; \n        uint value = address(this).balance;\n        to.transfer(value);\n        return \"the value is return\";\n    }\n\n    function getBalance() external view returns(uint){\n        return address(this).balance;\n    }\n\n\n}",
  "sourcePath": "C:/Users/sodaba ulomi/Desktop/wslapp/contracts/SmallBusiness.sol",
  "ast": {
    "absolutePath": "/C/Users/sodaba ulomi/Desktop/wslapp/contracts/SmallBusiness.sol",
    "exportedSymbols": {
      "InterfaceOfCuntract": [
        95
      ],
      "SmallBusiness": [
        883
      ]
    },
    "id": 884,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 130,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".24",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:2"
      },
      {
        "absolutePath": "/C/Users/sodaba ulomi/Desktop/wslapp/contracts/InterfaceOfCuntract.sol",
        "file": "./InterfaceOfCuntract.sol",
        "id": 131,
        "nodeType": "ImportDirective",
        "scope": 884,
        "sourceUnit": 96,
        "src": "700:35:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 132,
              "name": "InterfaceOfCuntract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 95,
              "src": "763:19:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_InterfaceOfCuntract_$95",
                "typeString": "contract InterfaceOfCuntract"
              }
            },
            "id": 133,
            "nodeType": "InheritanceSpecifier",
            "src": "763:19:2"
          }
        ],
        "contractDependencies": [
          95
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 883,
        "linearizedBaseContracts": [
          883,
          95
        ],
        "name": "SmallBusiness",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 135,
            "mutability": "mutable",
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 883,
            "src": "811:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 134,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "811:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "553df021",
            "id": 137,
            "mutability": "mutable",
            "name": "deal",
            "nodeType": "VariableDeclaration",
            "scope": 883,
            "src": "838:16:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 136,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "838:4:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 144,
            "mutability": "mutable",
            "name": "En",
            "nodeType": "VariableDeclaration",
            "scope": 883,
            "src": "860:49:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 138,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "860:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "expression": {
                "baseExpression": {
                  "id": 139,
                  "name": "Engineers",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 215,
                  "src": "872:9:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$161_storage_$",
                    "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                  }
                },
                "id": 142,
                "indexExpression": {
                  "expression": {
                    "id": 140,
                    "name": "msg",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4294967281,
                    "src": "882:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_magic_message",
                      "typeString": "msg"
                    }
                  },
                  "id": 141,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": false,
                  "lValueRequested": false,
                  "memberName": "sender",
                  "nodeType": "MemberAccess",
                  "src": "882:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "isConstant": false,
                "isLValue": true,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "IndexAccess",
                "src": "872:21:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Engineer_$161_storage",
                  "typeString": "struct SmallBusiness.Engineer storage ref"
                }
              },
              "id": 143,
              "isConstant": false,
              "isLValue": true,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "engineerAddress",
              "nodeType": "MemberAccess",
              "referencedDeclaration": 156,
              "src": "872:37:2",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "SmallBusiness.State",
            "id": 149,
            "members": [
              {
                "id": 145,
                "name": "forSell",
                "nodeType": "EnumValue",
                "src": "945:7:2"
              },
              {
                "id": 146,
                "name": "Finish",
                "nodeType": "EnumValue",
                "src": "960:6:2"
              },
              {
                "id": 147,
                "name": "primsion",
                "nodeType": "EnumValue",
                "src": "974:8:2"
              },
              {
                "id": 148,
                "name": "unprmision",
                "nodeType": "EnumValue",
                "src": "990:10:2"
              }
            ],
            "name": "State",
            "nodeType": "EnumDefinition",
            "src": "927:79:2"
          },
          {
            "canonicalName": "SmallBusiness.customer",
            "id": 154,
            "members": [
              {
                "constant": false,
                "id": 151,
                "mutability": "mutable",
                "name": "customerAddress",
                "nodeType": "VariableDeclaration",
                "scope": 154,
                "src": "1070:31:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 150,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1070:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 153,
                "mutability": "mutable",
                "name": "Name",
                "nodeType": "VariableDeclaration",
                "scope": 154,
                "src": "1111:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 152,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1111:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "customer",
            "nodeType": "StructDefinition",
            "scope": 883,
            "src": "1045:84:2",
            "visibility": "public"
          },
          {
            "canonicalName": "SmallBusiness.Engineer",
            "id": 161,
            "members": [
              {
                "constant": false,
                "id": 156,
                "mutability": "mutable",
                "name": "engineerAddress",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "1188:31:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 155,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:15:2",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 158,
                "mutability": "mutable",
                "name": "Name",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "1229:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 157,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1229:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 160,
                "mutability": "mutable",
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 161,
                "src": "1250:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$149",
                  "typeString": "enum SmallBusiness.State"
                },
                "typeName": {
                  "id": 159,
                  "name": "State",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 149,
                  "src": "1250:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$149",
                    "typeString": "enum SmallBusiness.State"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Engineer",
            "nodeType": "StructDefinition",
            "scope": 883,
            "src": "1165:111:2",
            "visibility": "public"
          },
          {
            "canonicalName": "SmallBusiness.Project",
            "id": 174,
            "members": [
              {
                "constant": false,
                "id": 163,
                "mutability": "mutable",
                "name": "owner",
                "nodeType": "VariableDeclaration",
                "scope": 174,
                "src": "1333:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 162,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1333:7:2",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 165,
                "mutability": "mutable",
                "name": "Name",
                "nodeType": "VariableDeclaration",
                "scope": 174,
                "src": "1356:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 164,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1356:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 167,
                "mutability": "mutable",
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 174,
                "src": "1377:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_State_$149",
                  "typeString": "enum SmallBusiness.State"
                },
                "typeName": {
                  "id": 166,
                  "name": "State",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 149,
                  "src": "1377:5:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_State_$149",
                    "typeString": "enum SmallBusiness.State"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 169,
                "mutability": "mutable",
                "name": "skills",
                "nodeType": "VariableDeclaration",
                "scope": 174,
                "src": "1398:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 168,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1398:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 171,
                "mutability": "mutable",
                "name": "information",
                "nodeType": "VariableDeclaration",
                "scope": 174,
                "src": "1421:18:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 170,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1421:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 173,
                "mutability": "mutable",
                "name": "averageOfprice",
                "nodeType": "VariableDeclaration",
                "scope": 174,
                "src": "1449:19:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 172,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1449:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Project",
            "nodeType": "StructDefinition",
            "scope": 883,
            "src": "1310:171:2",
            "visibility": "public"
          },
          {
            "canonicalName": "SmallBusiness.offer",
            "id": 181,
            "members": [
              {
                "constant": false,
                "id": 176,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "scope": 181,
                "src": "1532:13:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 175,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1532:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 178,
                "mutability": "mutable",
                "name": "day",
                "nodeType": "VariableDeclaration",
                "scope": 181,
                "src": "1555:11:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 177,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1555:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 180,
                "mutability": "mutable",
                "name": "moreInform",
                "nodeType": "VariableDeclaration",
                "scope": 181,
                "src": "1576:17:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 179,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "1576:6:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "offer",
            "nodeType": "StructDefinition",
            "scope": 883,
            "src": "1510:90:2",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 182,
              "nodeType": "StructuredDocumentation",
              "src": "1638:90:2",
              "text": "@notice Emitted when a Engineer is registred \n @param _address Engineer address"
            },
            "id": 186,
            "name": "logAddCustomer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "1754:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1754:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1753:18:2"
            },
            "src": "1733:39:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 187,
              "nodeType": "StructuredDocumentation",
              "src": "1778:90:2",
              "text": "@notice Emitted when a customer is registred \n @param _address customer address"
            },
            "id": 191,
            "name": "logAddEngineers",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "1895:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1895:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1894:18:2"
            },
            "src": "1873:40:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 192,
              "nodeType": "StructuredDocumentation",
              "src": "1919:103:2",
              "text": "@notice Emitted when a Project is posted \n @param _customerAddress is the address of Project"
            },
            "id": 196,
            "name": "PostProject",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 196,
                  "src": "2045:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2045:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2044:26:2"
            },
            "src": "2027:44:2"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 197,
              "nodeType": "StructuredDocumentation",
              "src": "2077:193:2",
              "text": "@notice Emitted when Engineer add a price for working on project \n @param  _customerAddress is the address of Project\n @param price is the price that customer send to Engineer"
            },
            "id": 203,
            "name": "chooseTheProject",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2298:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2298:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "2325:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2325:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2297:39:2"
            },
            "src": "2275:62:2"
          },
          {
            "constant": false,
            "functionSelector": "413bf38f",
            "id": 207,
            "mutability": "mutable",
            "name": "offers",
            "nodeType": "VariableDeclaration",
            "scope": 883,
            "src": "2427:40:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_offer_$181_storage_$",
              "typeString": "mapping(address => struct SmallBusiness.offer)"
            },
            "typeName": {
              "id": 206,
              "keyType": {
                "id": 204,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2436:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2427:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_offer_$181_storage_$",
                "typeString": "mapping(address => struct SmallBusiness.offer)"
              },
              "valueType": {
                "id": 205,
                "name": "offer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 181,
                "src": "2447:5:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_offer_$181_storage_ptr",
                  "typeString": "struct SmallBusiness.offer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "336989ae",
            "id": 211,
            "mutability": "mutable",
            "name": "customers",
            "nodeType": "VariableDeclaration",
            "scope": 883,
            "src": "2542:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$154_storage_$",
              "typeString": "mapping(address => struct SmallBusiness.customer)"
            },
            "typeName": {
              "id": 210,
              "keyType": {
                "id": 208,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2550:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2542:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$154_storage_$",
                "typeString": "mapping(address => struct SmallBusiness.customer)"
              },
              "valueType": {
                "id": 209,
                "name": "customer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 154,
                "src": "2561:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_customer_$154_storage_ptr",
                  "typeString": "struct SmallBusiness.customer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "03bc470d",
            "id": 215,
            "mutability": "mutable",
            "name": "Engineers",
            "nodeType": "VariableDeclaration",
            "scope": 883,
            "src": "2662:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$161_storage_$",
              "typeString": "mapping(address => struct SmallBusiness.Engineer)"
            },
            "typeName": {
              "id": 214,
              "keyType": {
                "id": 212,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2671:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2662:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$161_storage_$",
                "typeString": "mapping(address => struct SmallBusiness.Engineer)"
              },
              "valueType": {
                "id": 213,
                "name": "Engineer",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 161,
                "src": "2681:8:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Engineer_$161_storage_ptr",
                  "typeString": "struct SmallBusiness.Engineer"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "840e78fd",
            "id": 219,
            "mutability": "mutable",
            "name": "projects",
            "nodeType": "VariableDeclaration",
            "scope": 883,
            "src": "2782:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
              "typeString": "mapping(address => struct SmallBusiness.Project)"
            },
            "typeName": {
              "id": 218,
              "keyType": {
                "id": 216,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2791:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2782:28:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                "typeString": "mapping(address => struct SmallBusiness.Project)"
              },
              "valueType": {
                "id": 217,
                "name": "Project",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 174,
                "src": "2802:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                  "typeString": "struct SmallBusiness.Project"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "3001:54:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 224,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3017:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3017:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 226,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 221,
                          "src": "3031:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3017:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 223,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3008:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3008:32:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "3008:32:2"
                },
                {
                  "id": 230,
                  "nodeType": "PlaceholderStatement",
                  "src": "3047:1:2"
                }
              ]
            },
            "id": 232,
            "name": "verifyCaller",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "2983:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2983:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2982:18:2"
            },
            "src": "2960:95:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "3085:78:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 235,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135,
                          "src": "3101:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 236,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3110:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3110:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3101:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f776e6572",
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3126:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d10247a65709fdb3c0696b0ed760a0c246e12f8c496efb56291dd2fe3b0275d",
                          "typeString": "literal_string \"Caller is not owner\""
                        },
                        "value": "Caller is not owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d10247a65709fdb3c0696b0ed760a0c246e12f8c496efb56291dd2fe3b0275d",
                          "typeString": "literal_string \"Caller is not owner\""
                        }
                      ],
                      "id": 234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3092:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3092:56:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "ExpressionStatement",
                  "src": "3092:56:2"
                },
                {
                  "id": 242,
                  "nodeType": "PlaceholderStatement",
                  "src": "3155:1:2"
                }
              ]
            },
            "id": 244,
            "name": "isOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3082:2:2"
            },
            "src": "3065:98:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 259,
              "nodeType": "Block",
              "src": "3207:126:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 249,
                              "name": "customers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "3226:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$154_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.customer storage ref)"
                              }
                            },
                            "id": 251,
                            "indexExpression": {
                              "id": 250,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 246,
                              "src": "3236:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3226:19:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_customer_$154_storage",
                              "typeString": "struct SmallBusiness.customer storage ref"
                            }
                          },
                          "id": 252,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "customerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 151,
                          "src": "3226:35:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 253,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 246,
                          "src": "3265:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3226:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206163636f756e74206973206e6f7420437573746f6d65722e",
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3283:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1a21e2482cff0d301e9da97ad72957e24a75f61fa8acf94fa888828436a186b5",
                          "typeString": "literal_string \"this account is not Customer.\""
                        },
                        "value": "this account is not Customer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1a21e2482cff0d301e9da97ad72957e24a75f61fa8acf94fa888828436a186b5",
                          "typeString": "literal_string \"this account is not Customer.\""
                        }
                      ],
                      "id": 248,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3217:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3217:98:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 257,
                  "nodeType": "ExpressionStatement",
                  "src": "3217:98:2"
                },
                {
                  "id": 258,
                  "nodeType": "PlaceholderStatement",
                  "src": "3325:1:2"
                }
              ]
            },
            "id": 260,
            "name": "isCustomer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 260,
                  "src": "3190:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3190:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3189:18:2"
            },
            "src": "3170:163:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 275,
              "nodeType": "Block",
              "src": "3381:118:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 265,
                              "name": "Engineers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "3399:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$161_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                              }
                            },
                            "id": 267,
                            "indexExpression": {
                              "id": 266,
                              "name": "_Engineer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 262,
                              "src": "3409:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3399:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Engineer_$161_storage",
                              "typeString": "struct SmallBusiness.Engineer storage ref"
                            }
                          },
                          "id": 268,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "engineerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 156,
                          "src": "3399:36:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 269,
                          "name": "_Engineer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 262,
                          "src": "3438:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3399:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c65722069736e6f7420456e67696e656572",
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3457:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b617bd5ec7b3a83916097c4d59b438904070317990f7dfa8afc1b45629c54eb5",
                          "typeString": "literal_string \"caller isnot Engineer\""
                        },
                        "value": "caller isnot Engineer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b617bd5ec7b3a83916097c4d59b438904070317990f7dfa8afc1b45629c54eb5",
                          "typeString": "literal_string \"caller isnot Engineer\""
                        }
                      ],
                      "id": 264,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3391:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3391:90:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "3391:90:2"
                },
                {
                  "id": 274,
                  "nodeType": "PlaceholderStatement",
                  "src": "3491:1:2"
                }
              ]
            },
            "id": 276,
            "name": "isEngineer",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "_Engineer",
                  "nodeType": "VariableDeclaration",
                  "scope": 276,
                  "src": "3363:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3363:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3362:19:2"
            },
            "src": "3343:156:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "3547:227:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 281,
                              "name": "projects",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "3564:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                              }
                            },
                            "id": 283,
                            "indexExpression": {
                              "id": 282,
                              "name": "_customerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 278,
                              "src": "3573:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3564:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$174_storage",
                              "typeString": "struct SmallBusiness.Project storage ref"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 163,
                          "src": "3564:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3608:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3600:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 285,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3600:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3600:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3564:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f6a656374206973206e6f74206e6f7468696e67",
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3620:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                          "typeString": "literal_string \"The project is not nothing\""
                        },
                        "value": "The project is not nothing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                          "typeString": "literal_string \"The project is not nothing\""
                        }
                      ],
                      "id": 280,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3556:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3556:93:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 292,
                  "nodeType": "ExpressionStatement",
                  "src": "3556:93:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$149",
                          "typeString": "enum SmallBusiness.State"
                        },
                        "id": 300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 294,
                              "name": "projects",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "3666:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                              }
                            },
                            "id": 296,
                            "indexExpression": {
                              "id": 295,
                              "name": "_customerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 278,
                              "src": "3675:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3666:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$174_storage",
                              "typeString": "struct SmallBusiness.Project storage ref"
                            }
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "3666:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 298,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "3702:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$149_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "forSell",
                          "nodeType": "MemberAccess",
                          "src": "3702:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "src": "3666:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468652070726f6a6563742068617320616c726561647920646f6e652e2e",
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3724:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_48ad3683c258fceaa1c0746045810997cbaeec0c2f0385833b5777bb1d4628af",
                          "typeString": "literal_string \"the project has already done..\""
                        },
                        "value": "the project has already done.."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_48ad3683c258fceaa1c0746045810997cbaeec0c2f0385833b5777bb1d4628af",
                          "typeString": "literal_string \"the project has already done..\""
                        }
                      ],
                      "id": 293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3658:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3658:99:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "3658:99:2"
                },
                {
                  "id": 304,
                  "nodeType": "PlaceholderStatement",
                  "src": "3766:1:2"
                }
              ]
            },
            "id": 306,
            "name": "forSell",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 278,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "3522:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 277,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3522:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3521:26:2"
            },
            "src": "3505:269:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "3825:234:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 311,
                              "name": "projects",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "3842:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                              }
                            },
                            "id": 313,
                            "indexExpression": {
                              "id": 312,
                              "name": "_customerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "3851:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3842:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$174_storage",
                              "typeString": "struct SmallBusiness.Project storage ref"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 163,
                          "src": "3842:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 317,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3886:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3878:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 315,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3878:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3878:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3842:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468652070726f6a656374206973206e6f74206e6f7468696e67",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3898:28:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                          "typeString": "literal_string \"The project is not nothing\""
                        },
                        "value": "The project is not nothing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                          "typeString": "literal_string \"The project is not nothing\""
                        }
                      ],
                      "id": 310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3834:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3834:93:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 322,
                  "nodeType": "ExpressionStatement",
                  "src": "3834:93:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$149",
                          "typeString": "enum SmallBusiness.State"
                        },
                        "id": 330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 324,
                              "name": "projects",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "3944:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                              }
                            },
                            "id": 326,
                            "indexExpression": {
                              "id": 325,
                              "name": "_customerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "3953:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3944:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$174_storage",
                              "typeString": "struct SmallBusiness.Project storage ref"
                            }
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "3944:32:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 328,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "3980:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$149_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Finish",
                          "nodeType": "MemberAccess",
                          "src": "3980:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "src": "3944:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746869732050726f6a6563742068617320616c7265616479206265656e20666f722073656c6c",
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4001:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa3b5d1a096a651bb96b440efaaa92c2d2829964a79312f48fac5eece5415c6b",
                          "typeString": "literal_string \"this Project has already been for sell\""
                        },
                        "value": "this Project has already been for sell"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa3b5d1a096a651bb96b440efaaa92c2d2829964a79312f48fac5eece5415c6b",
                          "typeString": "literal_string \"this Project has already been for sell\""
                        }
                      ],
                      "id": 323,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3936:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3936:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "3936:106:2"
                },
                {
                  "id": 334,
                  "nodeType": "PlaceholderStatement",
                  "src": "4051:1:2"
                }
              ]
            },
            "id": 336,
            "name": "Finish",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 336,
                  "src": "3800:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3800:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3799:26:2"
            },
            "src": "3784:275:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 351,
              "nodeType": "Block",
              "src": "4086:124:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$149",
                          "typeString": "enum SmallBusiness.State"
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 339,
                              "name": "Engineers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "4104:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$161_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                              }
                            },
                            "id": 342,
                            "indexExpression": {
                              "expression": {
                                "id": 340,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4114:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4114:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4104:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Engineer_$161_storage",
                              "typeString": "struct SmallBusiness.Engineer storage ref"
                            }
                          },
                          "id": 343,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 160,
                          "src": "4104:27:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 344,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "4135:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$149_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "primsion",
                          "nodeType": "MemberAccess",
                          "src": "4135:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "src": "4104:45:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206163636f756e7420616c7265616479207365742076616c7565",
                        "id": 347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4159:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_820863d9742345c6cc06a0445b8222575c685dbc118061dc54d90ac56718eed3",
                          "typeString": "literal_string \"this account already set value\""
                        },
                        "value": "this account already set value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_820863d9742345c6cc06a0445b8222575c685dbc118061dc54d90ac56718eed3",
                          "typeString": "literal_string \"this account already set value\""
                        }
                      ],
                      "id": 338,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4096:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4096:96:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 349,
                  "nodeType": "ExpressionStatement",
                  "src": "4096:96:2"
                },
                {
                  "id": 350,
                  "nodeType": "PlaceholderStatement",
                  "src": "4202:1:2"
                }
              ]
            },
            "id": 352,
            "name": "verifyState",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4084:2:2"
            },
            "src": "4064:146:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 364,
              "nodeType": "Block",
              "src": "4230:51:2",
              "statements": [
                {
                  "expression": {
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 355,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135,
                      "src": "4240:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 356,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4248:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4248:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4240:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 359,
                  "nodeType": "ExpressionStatement",
                  "src": "4240:18:2"
                },
                {
                  "expression": {
                    "id": 362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 360,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "4268:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4273:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4268:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 363,
                  "nodeType": "ExpressionStatement",
                  "src": "4268:6:2"
                }
              ]
            },
            "id": 365,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4227:2:2"
            },
            "returnParameters": {
              "id": 354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4230:0:2"
            },
            "scope": 883,
            "src": "4216:65:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              12
            ],
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "4513:352:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 376,
                              "name": "customers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "4531:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$154_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.customer storage ref)"
                              }
                            },
                            "id": 378,
                            "indexExpression": {
                              "id": 377,
                              "name": "customerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 367,
                              "src": "4541:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4531:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_customer_$154_storage",
                              "typeString": "struct SmallBusiness.customer storage ref"
                            }
                          },
                          "id": 379,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "customerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 151,
                          "src": "4531:42:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4585:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4577:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 380,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4577:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4577:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4531:56:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206164647265737320697320616c726561647920726567697374726564",
                        "id": 385,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4597:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cea4d4fa71e7864649d08ce6f83215c1bf137c9a1ac10210dfa3a69790c872cd",
                          "typeString": "literal_string \"this address is already registred\""
                        },
                        "value": "this address is already registred"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cea4d4fa71e7864649d08ce6f83215c1bf137c9a1ac10210dfa3a69790c872cd",
                          "typeString": "literal_string \"this address is already registred\""
                        }
                      ],
                      "id": 375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4523:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4523:110:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "4523:110:2"
                },
                {
                  "expression": {
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 388,
                        "name": "customers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "4643:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$154_storage_$",
                          "typeString": "mapping(address => struct SmallBusiness.customer storage ref)"
                        }
                      },
                      "id": 390,
                      "indexExpression": {
                        "id": 389,
                        "name": "customerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "4653:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4643:26:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$154_storage",
                        "typeString": "struct SmallBusiness.customer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 392,
                          "name": "customerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "4711:15:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 393,
                          "name": "yourName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 369,
                          "src": "4747:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 391,
                        "name": "customer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 154,
                        "src": "4670:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_customer_$154_storage_ptr_$",
                          "typeString": "type(struct SmallBusiness.customer storage pointer)"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "customerAddress",
                        "Name"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "4670:96:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$154_memory_ptr",
                        "typeString": "struct SmallBusiness.customer memory"
                      }
                    },
                    "src": "4643:123:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_customer_$154_storage",
                      "typeString": "struct SmallBusiness.customer storage ref"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "4643:123:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 398,
                        "name": "customerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 367,
                        "src": "4796:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 397,
                      "name": "logAddCustomer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 186,
                      "src": "4781:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4781:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 400,
                  "nodeType": "EmitStatement",
                  "src": "4776:36:2"
                },
                {
                  "expression": {
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 401,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "4822:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 402,
                        "name": "deal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "4829:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4836:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4829:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4822:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "4822:15:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4854:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 374,
                  "id": 408,
                  "nodeType": "Return",
                  "src": "4847:11:2"
                }
              ]
            },
            "functionSelector": "88bc8150",
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addCustomer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 371,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4485:8:2"
            },
            "parameters": {
              "id": 370,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 367,
                  "mutability": "mutable",
                  "name": "customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "4410:31:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 366,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4410:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 369,
                  "mutability": "mutable",
                  "name": "yourName",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "4449:22:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 368,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4449:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4409:63:2"
            },
            "returnParameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 373,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 410,
                  "src": "4507:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 372,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4507:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4506:6:2"
            },
            "scope": 883,
            "src": "4389:476:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22
            ],
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "5085:382:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 421,
                              "name": "Engineers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "5103:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$161_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                              }
                            },
                            "id": 423,
                            "indexExpression": {
                              "id": 422,
                              "name": "_engineerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "5113:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5103:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Engineer_$161_storage",
                              "typeString": "struct SmallBusiness.Engineer storage ref"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "engineerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 156,
                          "src": "5103:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5158:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5150:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 425,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5150:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5150:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5103:57:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206164647265737320616c7265616479207265676973747265642e",
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5170:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2f02aa03166603fb488119f4e88edc7ae399185607c207053aa2dc7b20d01dbf",
                          "typeString": "literal_string \"this address already registred.\""
                        },
                        "value": "this address already registred."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2f02aa03166603fb488119f4e88edc7ae399185607c207053aa2dc7b20d01dbf",
                          "typeString": "literal_string \"this address already registred.\""
                        }
                      ],
                      "id": 420,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5095:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5095:109:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 432,
                  "nodeType": "ExpressionStatement",
                  "src": "5095:109:2"
                },
                {
                  "expression": {
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 433,
                        "name": "Engineers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 215,
                        "src": "5214:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$161_storage_$",
                          "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                        }
                      },
                      "id": 435,
                      "indexExpression": {
                        "id": 434,
                        "name": "_engineerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "5224:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5214:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Engineer_$161_storage",
                        "typeString": "struct SmallBusiness.Engineer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 437,
                          "name": "_engineerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 412,
                          "src": "5285:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 438,
                          "name": "_yourName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 414,
                          "src": "5321:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "expression": {
                            "id": 439,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "5351:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$149_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "primsion",
                          "nodeType": "MemberAccess",
                          "src": "5351:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        ],
                        "id": 436,
                        "name": "Engineer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "5244:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Engineer_$161_storage_ptr_$",
                          "typeString": "type(struct SmallBusiness.Engineer storage pointer)"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "engineerAddress",
                        "Name",
                        "state"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5244:132:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Engineer_$161_memory_ptr",
                        "typeString": "struct SmallBusiness.Engineer memory"
                      }
                    },
                    "src": "5214:162:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Engineer_$161_storage",
                      "typeString": "struct SmallBusiness.Engineer storage ref"
                    }
                  },
                  "id": 443,
                  "nodeType": "ExpressionStatement",
                  "src": "5214:162:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 445,
                        "name": "_engineerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "5403:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 444,
                      "name": "logAddEngineers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "5387:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5387:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 447,
                  "nodeType": "EmitStatement",
                  "src": "5382:38:2"
                },
                {
                  "expression": {
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 448,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "5427:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 449,
                        "name": "deal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "5434:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5441:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5434:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5427:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "5427:15:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5455:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 419,
                  "id": 455,
                  "nodeType": "Return",
                  "src": "5448:11:2"
                }
              ]
            },
            "functionSelector": "a871ca5d",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addEngineer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 416,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5063:8:2"
            },
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "_engineerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "4998:32:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4998:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 414,
                  "mutability": "mutable",
                  "name": "_yourName",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "5031:23:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 413,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5031:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4997:58:2"
            },
            "returnParameters": {
              "id": 419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 418,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "5080:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 417,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5080:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5079:6:2"
            },
            "scope": 883,
            "src": "4977:490:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              36
            ],
            "body": {
              "id": 527,
              "nodeType": "Block",
              "src": "5874:571:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 477,
                              "name": "projects",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "5892:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                              }
                            },
                            "id": 480,
                            "indexExpression": {
                              "expression": {
                                "id": 478,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5901:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5901:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5892:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$174_storage",
                              "typeString": "struct SmallBusiness.Project storage ref"
                            }
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 163,
                          "src": "5892:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 484,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5930:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5922:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 482,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5922:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5922:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "5892:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746869732070726f6a65637420616c72656164792069732065786973742e",
                        "id": 487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5943:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_da9b8ddb4929eb16dec1eb567070cd3dbd4e024729714b8dd3a83a48d9db14c1",
                          "typeString": "literal_string \"this project already is exist.\""
                        },
                        "value": "this project already is exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_da9b8ddb4929eb16dec1eb567070cd3dbd4e024729714b8dd3a83a48d9db14c1",
                          "typeString": "literal_string \"this project already is exist.\""
                        }
                      ],
                      "id": 476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5884:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5884:92:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 489,
                  "nodeType": "ExpressionStatement",
                  "src": "5884:92:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 491,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "5994:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "5994:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 493,
                          "name": "averageOfprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 466,
                          "src": "6005:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5994:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468652076616c756520796f752073656e642073686f756c64206265206c657373207468616e20796f75722063757272656e7420617665726167652e",
                        "id": 495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6029:62:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f626ceb74ac075baf1a9780a1808432c8439e35ad343e8b0986b7bae7fa9ec1",
                          "typeString": "literal_string \"the value you send should be less than your current average.\""
                        },
                        "value": "the value you send should be less than your current average."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7f626ceb74ac075baf1a9780a1808432c8439e35ad343e8b0986b7bae7fa9ec1",
                          "typeString": "literal_string \"the value you send should be less than your current average.\""
                        }
                      ],
                      "id": 490,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5986:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5986:106:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "5986:106:2"
                },
                {
                  "expression": {
                    "id": 512,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 498,
                        "name": "projects",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "6102:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                          "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                        }
                      },
                      "id": 501,
                      "indexExpression": {
                        "expression": {
                          "id": 499,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6111:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6111:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6102:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$174_storage",
                        "typeString": "struct SmallBusiness.Project storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 503,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6153:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6153:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "id": 505,
                          "name": "Name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 460,
                          "src": "6182:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 506,
                          "name": "skills",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 462,
                          "src": "6207:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 507,
                          "name": "information",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 464,
                          "src": "6239:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 508,
                          "name": "averageOfprice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 466,
                          "src": "6279:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 509,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "6313:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$149_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "forSell",
                          "nodeType": "MemberAccess",
                          "src": "6313:13:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        ],
                        "id": 502,
                        "name": "Project",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "6125:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Project_$174_storage_ptr_$",
                          "typeString": "type(struct SmallBusiness.Project storage pointer)"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "owner",
                        "Name",
                        "skills",
                        "information",
                        "averageOfprice",
                        "state"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6125:229:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$174_memory_ptr",
                        "typeString": "struct SmallBusiness.Project memory"
                      }
                    },
                    "src": "6102:252:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$174_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "id": 513,
                  "nodeType": "ExpressionStatement",
                  "src": "6102:252:2"
                },
                {
                  "expression": {
                    "id": 518,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 514,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "6364:4:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 515,
                        "name": "deal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 137,
                        "src": "6371:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6378:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "6371:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6364:15:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 519,
                  "nodeType": "ExpressionStatement",
                  "src": "6364:15:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 521,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6406:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6406:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 520,
                      "name": "PostProject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 196,
                      "src": "6394:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6394:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "EmitStatement",
                  "src": "6389:28:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6434:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 475,
                  "id": 526,
                  "nodeType": "Return",
                  "src": "6427:11:2"
                }
              ]
            },
            "documentation": {
              "id": 458,
              "nodeType": "StructuredDocumentation",
              "src": "5477:192:2",
              "text": "add Project`s id in to mapping\ncheck the state of project should be forSell\ncheck the modifier is customer to call that function \nthe customer should call that function"
            },
            "functionSelector": "20943f7a",
            "id": 528,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 470,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "5844:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5844:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 472,
                "modifierName": {
                  "id": 469,
                  "name": "verifyCaller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 232,
                  "src": "5831:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5831:24:2"
              }
            ],
            "name": "addProject",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 468,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5809:8:2"
            },
            "parameters": {
              "id": 467,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "mutability": "mutable",
                  "name": "Name",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "5699:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 459,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5699:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 462,
                  "mutability": "mutable",
                  "name": "skills",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "5723:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5723:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 464,
                  "mutability": "mutable",
                  "name": "information",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "5744:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5744:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 466,
                  "mutability": "mutable",
                  "name": "averageOfprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "5775:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5775:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5698:98:2"
            },
            "returnParameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 528,
                  "src": "5869:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5869:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5868:6:2"
            },
            "scope": 883,
            "src": "5679:766:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              78
            ],
            "body": {
              "id": 579,
              "nodeType": "Block",
              "src": "6660:283:2",
              "statements": [
                {
                  "expression": {
                    "id": 560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 551,
                        "name": "offers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "6670:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_offer_$181_storage_$",
                          "typeString": "mapping(address => struct SmallBusiness.offer storage ref)"
                        }
                      },
                      "id": 554,
                      "indexExpression": {
                        "expression": {
                          "id": 552,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6677:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6677:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6670:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_offer_$181_storage",
                        "typeString": "struct SmallBusiness.offer storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 556,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "6718:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 557,
                          "name": "day",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 532,
                          "src": "6741:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 558,
                          "name": "information",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 536,
                          "src": "6769:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 555,
                        "name": "offer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 181,
                        "src": "6691:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_offer_$181_storage_ptr_$",
                          "typeString": "type(struct SmallBusiness.offer storage pointer)"
                        }
                      },
                      "id": 559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "price",
                        "day",
                        "moreInform"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "6691:100:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_offer_$181_memory_ptr",
                        "typeString": "struct SmallBusiness.offer memory"
                      }
                    },
                    "src": "6670:121:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_offer_$181_storage",
                      "typeString": "struct SmallBusiness.offer storage ref"
                    }
                  },
                  "id": 561,
                  "nodeType": "ExpressionStatement",
                  "src": "6670:121:2"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_State_$149",
                      "typeString": "enum SmallBusiness.State"
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 562,
                          "name": "Engineers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 215,
                          "src": "6801:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$161_storage_$",
                            "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                          }
                        },
                        "id": 565,
                        "indexExpression": {
                          "expression": {
                            "id": 563,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "6811:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6811:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6801:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Engineer_$161_storage",
                          "typeString": "struct SmallBusiness.Engineer storage ref"
                        }
                      },
                      "id": 566,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 160,
                      "src": "6801:27:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$149",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 567,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "6832:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$149_$",
                          "typeString": "type(enum SmallBusiness.State)"
                        }
                      },
                      "id": 568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "unprmision",
                      "nodeType": "MemberAccess",
                      "src": "6832:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$149",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "src": "6801:47:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 570,
                  "nodeType": "ExpressionStatement",
                  "src": "6801:47:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 572,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6880:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6880:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 574,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "6891:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 571,
                      "name": "chooseTheProject",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "6863:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6863:34:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 576,
                  "nodeType": "EmitStatement",
                  "src": "6858:39:2"
                },
                {
                  "expression": {
                    "hexValue": "7365742076616c7565206f6e2070726f6a656374",
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6914:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_38bb434703185950c832a0c6d6eaed12aa33c8ddaa0b80d716b987534b74209e",
                      "typeString": "literal_string \"set value on project\""
                    },
                    "value": "set value on project"
                  },
                  "functionReturnParameters": 550,
                  "id": 578,
                  "nodeType": "Return",
                  "src": "6907:29:2"
                }
              ]
            },
            "functionSelector": "78e4f934",
            "id": 580,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 540,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "6579:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "6579:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 542,
                "modifierName": {
                  "id": 539,
                  "name": "isEngineer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 276,
                  "src": "6568:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6568:22:2"
              },
              {
                "arguments": [
                  {
                    "id": 544,
                    "name": "_customerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 530,
                    "src": "6601:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 545,
                "modifierName": {
                  "id": 543,
                  "name": "forSell",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "6593:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6593:25:2"
              },
              {
                "arguments": [],
                "id": 547,
                "modifierName": {
                  "id": 546,
                  "name": "verifyState",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 352,
                  "src": "6619:11:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "6619:13:2"
              }
            ],
            "name": "chooseToWork",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 538,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6559:8:2"
            },
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 530,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "6473:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6473:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "day",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "6498:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6498:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "6511:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "6511:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "information",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "6524:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6524:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6472:78:2"
            },
            "returnParameters": {
              "id": 550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 549,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 580,
                  "src": "6646:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 548,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6646:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6645:15:2"
            },
            "scope": 883,
            "src": "6451:492:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              86
            ],
            "body": {
              "id": 661,
              "nodeType": "Block",
              "src": "7089:554:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 597,
                              "name": "Engineers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 215,
                              "src": "7107:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$161_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                              }
                            },
                            "id": 599,
                            "indexExpression": {
                              "id": 598,
                              "name": "_engineerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 582,
                              "src": "7117:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7107:27:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Engineer_$161_storage",
                              "typeString": "struct SmallBusiness.Engineer storage ref"
                            }
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "engineerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 156,
                          "src": "7107:43:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 601,
                          "name": "_engineerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 582,
                          "src": "7154:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7107:63:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "74686973206163636f756e74206973206e6f7420616e20656e67696e656572",
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7185:33:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3a575e1768ec30c540f377844b39a498d9b629f44612d5fc9eadb9e3d723a59",
                          "typeString": "literal_string \"this account is not an engineer\""
                        },
                        "value": "this account is not an engineer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a3a575e1768ec30c540f377844b39a498d9b629f44612d5fc9eadb9e3d723a59",
                          "typeString": "literal_string \"this account is not an engineer\""
                        }
                      ],
                      "id": 596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7099:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7099:120:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 605,
                  "nodeType": "ExpressionStatement",
                  "src": "7099:120:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 607,
                              "name": "customers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "7237:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$154_storage_$",
                                "typeString": "mapping(address => struct SmallBusiness.customer storage ref)"
                              }
                            },
                            "id": 610,
                            "indexExpression": {
                              "expression": {
                                "id": 608,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "7247:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7247:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7237:21:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_customer_$154_storage",
                              "typeString": "struct SmallBusiness.customer storage ref"
                            }
                          },
                          "id": 611,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "customerAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 151,
                          "src": "7237:37:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 612,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7278:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7278:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "7237:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7468697320637573746f6d6572206973206e6f742045786973742e",
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7303:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0de5b351d6557eb48e363761cf6090d3026541521fe1e3365103722e0582e41",
                          "typeString": "literal_string \"this customer is not Exist.\""
                        },
                        "value": "this customer is not Exist."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e0de5b351d6557eb48e363761cf6090d3026541521fe1e3365103722e0582e41",
                          "typeString": "literal_string \"this customer is not Exist.\""
                        }
                      ],
                      "id": 606,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7229:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7229:104:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "7229:104:2"
                },
                {
                  "assignments": [
                    619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 619,
                      "mutability": "mutable",
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 661,
                      "src": "7343:17:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                        "typeString": "struct SmallBusiness.Project"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "Project",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 174,
                        "src": "7343:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                          "typeString": "struct SmallBusiness.Project"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 624,
                  "initialValue": {
                    "baseExpression": {
                      "id": 620,
                      "name": "projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "7363:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                      }
                    },
                    "id": 623,
                    "indexExpression": {
                      "expression": {
                        "id": 621,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7372:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7372:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7363:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$174_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7343:40:2"
                },
                {
                  "expression": {
                    "id": 630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 625,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 619,
                        "src": "7393:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 627,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 167,
                      "src": "7393:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$149",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 628,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "7403:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$149_$",
                          "typeString": "type(enum SmallBusiness.State)"
                        }
                      },
                      "id": 629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Finish",
                      "nodeType": "MemberAccess",
                      "src": "7403:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$149",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "src": "7393:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$149",
                      "typeString": "enum SmallBusiness.State"
                    }
                  },
                  "id": 631,
                  "nodeType": "ExpressionStatement",
                  "src": "7393:22:2"
                },
                {
                  "assignments": [
                    633
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 633,
                      "mutability": "mutable",
                      "name": "o",
                      "nodeType": "VariableDeclaration",
                      "scope": 661,
                      "src": "7425:15:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_offer_$181_storage_ptr",
                        "typeString": "struct SmallBusiness.offer"
                      },
                      "typeName": {
                        "id": 632,
                        "name": "offer",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 181,
                        "src": "7425:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_offer_$181_storage_ptr",
                          "typeString": "struct SmallBusiness.offer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 637,
                  "initialValue": {
                    "baseExpression": {
                      "id": 634,
                      "name": "offers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "7443:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_offer_$181_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.offer storage ref)"
                      }
                    },
                    "id": 636,
                    "indexExpression": {
                      "id": 635,
                      "name": "_engineerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "7450:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7443:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_offer_$181_storage",
                      "typeString": "struct SmallBusiness.offer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7425:42:2"
                },
                {
                  "assignments": [
                    639
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 639,
                      "mutability": "mutable",
                      "name": "e",
                      "nodeType": "VariableDeclaration",
                      "scope": 661,
                      "src": "7477:18:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Engineer_$161_storage_ptr",
                        "typeString": "struct SmallBusiness.Engineer"
                      },
                      "typeName": {
                        "id": 638,
                        "name": "Engineer",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 161,
                        "src": "7477:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Engineer_$161_storage_ptr",
                          "typeString": "struct SmallBusiness.Engineer"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 643,
                  "initialValue": {
                    "baseExpression": {
                      "id": 640,
                      "name": "Engineers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "7498:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Engineer_$161_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Engineer storage ref)"
                      }
                    },
                    "id": 642,
                    "indexExpression": {
                      "id": 641,
                      "name": "_engineerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 582,
                      "src": "7508:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7498:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Engineer_$161_storage",
                      "typeString": "struct SmallBusiness.Engineer storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7477:48:2"
                },
                {
                  "assignments": [
                    645
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 645,
                      "mutability": "mutable",
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 661,
                      "src": "7535:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 644,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7535:15:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": {
                    "expression": {
                      "id": 646,
                      "name": "e",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 639,
                      "src": "7556:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Engineer_$161_storage_ptr",
                        "typeString": "struct SmallBusiness.Engineer storage pointer"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "engineerAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 156,
                    "src": "7556:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7535:38:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 652,
                            "name": "o",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 633,
                            "src": "7596:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_offer_$181_storage_ptr",
                              "typeString": "struct SmallBusiness.offer storage pointer"
                            }
                          },
                          "id": 653,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 176,
                          "src": "7596:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "hexValue": "31",
                              "id": 654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7606:7:2",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1"
                            }
                          ],
                          "id": 655,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "7605:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "7596:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 649,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 645,
                        "src": "7584:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "7584:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7584:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 658,
                  "nodeType": "ExpressionStatement",
                  "src": "7584:31:2"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7632:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 595,
                  "id": 660,
                  "nodeType": "Return",
                  "src": "7625:11:2"
                }
              ]
            },
            "functionSelector": "3d8f426d",
            "id": 662,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 586,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "7043:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7043:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 588,
                "modifierName": {
                  "id": 585,
                  "name": "isCustomer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 260,
                  "src": "7032:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7032:22:2"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 590,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "7063:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7063:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 592,
                "modifierName": {
                  "id": 589,
                  "name": "forSell",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "7055:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7055:19:2"
              }
            ],
            "name": "accepteCustomer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 584,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7023:8:2"
            },
            "parameters": {
              "id": 583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 582,
                  "mutability": "mutable",
                  "name": "_engineerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "6974:32:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6974:15:2",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6973:34:2"
            },
            "returnParameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 594,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 662,
                  "src": "7083:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 593,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7083:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7082:6:2"
            },
            "scope": 883,
            "src": "6949:694:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              50
            ],
            "body": {
              "id": 731,
              "nodeType": "Block",
              "src": "7908:354:2",
              "statements": [
                {
                  "assignments": [
                    685
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 685,
                      "mutability": "mutable",
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 731,
                      "src": "7926:16:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$174_memory_ptr",
                        "typeString": "struct SmallBusiness.Project"
                      },
                      "typeName": {
                        "id": 684,
                        "name": "Project",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 174,
                        "src": "7926:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                          "typeString": "struct SmallBusiness.Project"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 690,
                  "initialValue": {
                    "baseExpression": {
                      "id": 686,
                      "name": "projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "7945:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                      }
                    },
                    "id": 689,
                    "indexExpression": {
                      "expression": {
                        "id": 687,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7954:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7954:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7945:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$174_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7926:39:2"
                },
                {
                  "expression": {
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 691,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "7978:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 693,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 163,
                      "src": "7978:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 694,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "7988:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "7988:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "7978:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 697,
                  "nodeType": "ExpressionStatement",
                  "src": "7978:20:2"
                },
                {
                  "expression": {
                    "id": 702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 698,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "8011:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 700,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 165,
                      "src": "8011:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 701,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 664,
                      "src": "8020:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8011:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 703,
                  "nodeType": "ExpressionStatement",
                  "src": "8011:14:2"
                },
                {
                  "expression": {
                    "id": 709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 704,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "8038:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 706,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 167,
                      "src": "8038:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$149",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 707,
                        "name": "State",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "8047:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_State_$149_$",
                          "typeString": "type(enum SmallBusiness.State)"
                        }
                      },
                      "id": 708,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "forSell",
                      "nodeType": "MemberAccess",
                      "src": "8047:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$149",
                        "typeString": "enum SmallBusiness.State"
                      }
                    },
                    "src": "8038:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_State_$149",
                      "typeString": "enum SmallBusiness.State"
                    }
                  },
                  "id": 710,
                  "nodeType": "ExpressionStatement",
                  "src": "8038:22:2"
                },
                {
                  "expression": {
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 711,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "8073:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 713,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "skills",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 169,
                      "src": "8073:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 714,
                      "name": "_skills",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 666,
                      "src": "8083:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8073:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 716,
                  "nodeType": "ExpressionStatement",
                  "src": "8073:17:2"
                },
                {
                  "expression": {
                    "id": 721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 717,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "8103:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 719,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "information",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 171,
                      "src": "8103:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 720,
                      "name": "_information",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 668,
                      "src": "8119:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8103:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 722,
                  "nodeType": "ExpressionStatement",
                  "src": "8103:28:2"
                },
                {
                  "expression": {
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 723,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "8144:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_memory_ptr",
                          "typeString": "struct SmallBusiness.Project memory"
                        }
                      },
                      "id": 725,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "averageOfprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 173,
                      "src": "8144:17:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 726,
                      "name": "_averageOfprice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 670,
                      "src": "8164:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8144:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 728,
                  "nodeType": "ExpressionStatement",
                  "src": "8144:35:2"
                },
                {
                  "expression": {
                    "hexValue": "7468652070726f6a6563742077617320757064617465",
                    "id": 729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8230:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_06546cf8d2075152a53a9d278a2873fa96544eb256a79e315eeef32273a7853a",
                      "typeString": "literal_string \"the project was update\""
                    },
                    "value": "the project was update"
                  },
                  "functionReturnParameters": 683,
                  "id": 730,
                  "nodeType": "Return",
                  "src": "8223:31:2"
                }
              ]
            },
            "functionSelector": "aede6098",
            "id": 732,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 674,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "7825:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7825:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 676,
                "modifierName": {
                  "id": 673,
                  "name": "verifyCaller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 232,
                  "src": "7812:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7812:24:2"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 678,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "7853:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "7853:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 680,
                "modifierName": {
                  "id": 677,
                  "name": "forSell",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "7845:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7845:19:2"
              }
            ],
            "name": "EditProject",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 672,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7795:8:2"
            },
            "parameters": {
              "id": 671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7670:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7670:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 666,
                  "mutability": "mutable",
                  "name": "_skills",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7699:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 665,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7699:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 668,
                  "mutability": "mutable",
                  "name": "_information",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7730:26:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 667,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7730:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 670,
                  "mutability": "mutable",
                  "name": "_averageOfprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7757:20:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "7757:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7669:110:2"
            },
            "returnParameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 732,
                  "src": "7882:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7882:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7881:15:2"
            },
            "scope": 883,
            "src": "7649:613:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              64
            ],
            "body": {
              "id": 769,
              "nodeType": "Block",
              "src": "8539:131:2",
              "statements": [
                {
                  "assignments": [
                    754
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 754,
                      "mutability": "mutable",
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 769,
                      "src": "8549:17:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                        "typeString": "struct SmallBusiness.Project"
                      },
                      "typeName": {
                        "id": 753,
                        "name": "Project",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 174,
                        "src": "8549:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                          "typeString": "struct SmallBusiness.Project"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 758,
                  "initialValue": {
                    "baseExpression": {
                      "id": 755,
                      "name": "projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "8569:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                      }
                    },
                    "id": 757,
                    "indexExpression": {
                      "id": 756,
                      "name": "_customerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 734,
                      "src": "8578:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8569:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$174_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8549:46:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "expression": {
                          "id": 759,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "8613:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                            "typeString": "struct SmallBusiness.Project storage pointer"
                          }
                        },
                        "id": 760,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Name",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 165,
                        "src": "8613:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 761,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "8620:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                            "typeString": "struct SmallBusiness.Project storage pointer"
                          }
                        },
                        "id": 762,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "skills",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 169,
                        "src": "8620:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 763,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "8629:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                            "typeString": "struct SmallBusiness.Project storage pointer"
                          }
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "information",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 171,
                        "src": "8629:13:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      },
                      {
                        "expression": {
                          "id": 765,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 754,
                          "src": "8643:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                            "typeString": "struct SmallBusiness.Project storage pointer"
                          }
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "averageOfprice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 173,
                        "src": "8643:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 767,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "8612:50:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_string_storage_$_t_string_storage_$_t_string_storage_$_t_uint256_$",
                      "typeString": "tuple(string storage ref,string storage ref,string storage ref,uint256)"
                    }
                  },
                  "functionReturnParameters": 752,
                  "id": 768,
                  "nodeType": "Return",
                  "src": "8605:57:2"
                }
              ]
            },
            "functionSelector": "f9870705",
            "id": 770,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 738,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "8383:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "8383:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 740,
                "modifierName": {
                  "id": 737,
                  "name": "verifyCaller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 232,
                  "src": "8370:12:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8370:24:2"
              },
              {
                "arguments": [
                  {
                    "id": 742,
                    "name": "_customerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 734,
                    "src": "8408:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 743,
                "modifierName": {
                  "id": 741,
                  "name": "forSell",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 306,
                  "src": "8400:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8400:25:2"
              }
            ],
            "name": "getProject",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 736,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8356:8:2"
            },
            "parameters": {
              "id": 735,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 734,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "8318:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 733,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8318:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8317:26:2"
            },
            "returnParameters": {
              "id": 752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 745,
                  "mutability": "mutable",
                  "name": "Name",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "8439:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 744,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8439:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 747,
                  "mutability": "mutable",
                  "name": "skills",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "8458:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 746,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8458:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 749,
                  "mutability": "mutable",
                  "name": "information",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "8484:25:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 748,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8484:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 751,
                  "mutability": "mutable",
                  "name": "averageOfprice",
                  "nodeType": "VariableDeclaration",
                  "scope": 770,
                  "src": "8510:19:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "8510:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8438:93:2"
            },
            "scope": 883,
            "src": "8298:372:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              94
            ],
            "body": {
              "id": 823,
              "nodeType": "Block",
              "src": "8858:250:2",
              "statements": [
                {
                  "assignments": [
                    783
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 783,
                      "mutability": "mutable",
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 823,
                      "src": "8869:17:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                        "typeString": "struct SmallBusiness.Project"
                      },
                      "typeName": {
                        "id": 782,
                        "name": "Project",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 174,
                        "src": "8869:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                          "typeString": "struct SmallBusiness.Project"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 787,
                  "initialValue": {
                    "baseExpression": {
                      "id": 784,
                      "name": "projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "8889:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                      }
                    },
                    "id": 786,
                    "indexExpression": {
                      "id": 785,
                      "name": "_customerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 772,
                      "src": "8898:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8889:26:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$174_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8869:46:2"
                },
                {
                  "expression": {
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 788,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "8925:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 790,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 163,
                      "src": "8925:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8942:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8934:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 791,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8934:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8934:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "8925:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "8925:19:2"
                },
                {
                  "expression": {
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 797,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "8954:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 799,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 165,
                      "src": "8954:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "20",
                      "id": 800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8963:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                        "typeString": "literal_string \" \""
                      },
                      "value": " "
                    },
                    "src": "8954:12:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "8954:12:2"
                },
                {
                  "expression": {
                    "id": 807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 803,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "8976:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 805,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "skills",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 169,
                      "src": "8976:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "20",
                      "id": 806,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8987:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                        "typeString": "literal_string \" \""
                      },
                      "value": " "
                    },
                    "src": "8976:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 808,
                  "nodeType": "ExpressionStatement",
                  "src": "8976:14:2"
                },
                {
                  "expression": {
                    "id": 813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 809,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "9000:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 811,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "information",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 171,
                      "src": "9000:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "20",
                      "id": 812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9016:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_681afa780d17da29203322b473d3f210a7d621259a4e6ce9e403f5a266ff719a",
                        "typeString": "literal_string \" \""
                      },
                      "value": " "
                    },
                    "src": "9000:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 814,
                  "nodeType": "ExpressionStatement",
                  "src": "9000:19:2"
                },
                {
                  "expression": {
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 815,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "9029:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                          "typeString": "struct SmallBusiness.Project storage pointer"
                        }
                      },
                      "id": 817,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "averageOfprice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 173,
                      "src": "9029:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9048:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9029:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "9029:20:2"
                },
                {
                  "expression": {
                    "hexValue": "7468652070726f6a656374207761732064656c657465",
                    "id": 821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9076:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_474004cf8bc1dcd5c38513e02383d2c2e197835d51339d5a7a818c07a583450b",
                      "typeString": "literal_string \"the project was delete\""
                    },
                    "value": "the project was delete"
                  },
                  "functionReturnParameters": 781,
                  "id": 822,
                  "nodeType": "Return",
                  "src": "9069:31:2"
                }
              ]
            },
            "functionSelector": "2200e21e",
            "id": 824,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 776,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "8819:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "8819:10:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 778,
                "modifierName": {
                  "id": 775,
                  "name": "isCustomer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 260,
                  "src": "8808:10:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8808:22:2"
              }
            ],
            "name": "deleteProject",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 774,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8794:8:2"
            },
            "parameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 772,
                  "mutability": "mutable",
                  "name": "_customerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "8756:24:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8756:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8755:26:2"
            },
            "returnParameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 824,
                  "src": "8844:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8844:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8843:15:2"
            },
            "scope": 883,
            "src": "8733:375:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 869,
              "nodeType": "Block",
              "src": "9391:310:2",
              "statements": [
                {
                  "assignments": [
                    830
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 830,
                      "mutability": "mutable",
                      "name": "p",
                      "nodeType": "VariableDeclaration",
                      "scope": 869,
                      "src": "9401:17:2",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                        "typeString": "struct SmallBusiness.Project"
                      },
                      "typeName": {
                        "id": 829,
                        "name": "Project",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 174,
                        "src": "9401:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                          "typeString": "struct SmallBusiness.Project"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 835,
                  "initialValue": {
                    "baseExpression": {
                      "id": 831,
                      "name": "projects",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "9421:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Project_$174_storage_$",
                        "typeString": "mapping(address => struct SmallBusiness.Project storage ref)"
                      }
                    },
                    "id": 834,
                    "indexExpression": {
                      "expression": {
                        "id": 832,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9430:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9430:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9421:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Project_$174_storage",
                      "typeString": "struct SmallBusiness.Project storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9401:40:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_State_$149",
                          "typeString": "enum SmallBusiness.State"
                        },
                        "id": 841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 837,
                            "name": "p",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 830,
                            "src": "9459:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Project_$174_storage_ptr",
                              "typeString": "struct SmallBusiness.Project storage pointer"
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 167,
                          "src": "9459:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 839,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 149,
                            "src": "9470:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$149_$",
                              "typeString": "type(enum SmallBusiness.State)"
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Finish",
                          "nodeType": "MemberAccess",
                          "src": "9470:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          }
                        },
                        "src": "9459:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746869732070726f6a65637420776173206e6f742066696e697368",
                        "id": 842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9484:29:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e20e1579c4ddb32976d29829607291694b179a8b9e0b6062028dba84be81b25d",
                          "typeString": "literal_string \"this project was not finish\""
                        },
                        "value": "this project was not finish"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e20e1579c4ddb32976d29829607291694b179a8b9e0b6062028dba84be81b25d",
                          "typeString": "literal_string \"this project was not finish\""
                        }
                      ],
                      "id": 836,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9451:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 843,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9451:63:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 844,
                  "nodeType": "ExpressionStatement",
                  "src": "9451:63:2"
                },
                {
                  "assignments": [
                    846
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 846,
                      "mutability": "mutable",
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 869,
                      "src": "9524:18:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 845,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9524:15:2",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 852,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 847,
                        "name": "customers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "9545:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_customer_$154_storage_$",
                          "typeString": "mapping(address => struct SmallBusiness.customer storage ref)"
                        }
                      },
                      "id": 850,
                      "indexExpression": {
                        "expression": {
                          "id": 848,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "9555:3:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 849,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9555:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9545:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_customer_$154_storage",
                        "typeString": "struct SmallBusiness.customer storage ref"
                      }
                    },
                    "id": 851,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "customerAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 151,
                    "src": "9545:37:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9524:58:2"
                },
                {
                  "assignments": [
                    854
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 854,
                      "mutability": "mutable",
                      "name": "value",
                      "nodeType": "VariableDeclaration",
                      "scope": 869,
                      "src": "9594:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 853,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "9594:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 860,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 857,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "9615:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SmallBusiness_$883",
                            "typeString": "contract SmallBusiness"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SmallBusiness_$883",
                            "typeString": "contract SmallBusiness"
                          }
                        ],
                        "id": 856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9607:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 855,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9607:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9607:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9607:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9594:34:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 864,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 854,
                        "src": "9650:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 861,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "9638:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "9638:11:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9638:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 866,
                  "nodeType": "ExpressionStatement",
                  "src": "9638:18:2"
                },
                {
                  "expression": {
                    "hexValue": "7468652076616c75652069732072657475726e",
                    "id": 867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9673:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_919f46e5d0b682f45f4544091975e46aaf3802edb064b93b9299473637e966e7",
                      "typeString": "literal_string \"the value is return\""
                    },
                    "value": "the value is return"
                  },
                  "functionReturnParameters": 828,
                  "id": 868,
                  "nodeType": "Return",
                  "src": "9666:28:2"
                }
              ]
            },
            "functionSelector": "cea1a67a",
            "id": 870,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_passthevalue",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9359:2:2"
            },
            "returnParameters": {
              "id": 828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 827,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "9377:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 826,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9377:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9376:15:2"
            },
            "scope": 883,
            "src": "9337:364:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 881,
              "nodeType": "Block",
              "src": "9756:45:2",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 877,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "9781:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SmallBusiness_$883",
                            "typeString": "contract SmallBusiness"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_SmallBusiness_$883",
                            "typeString": "contract SmallBusiness"
                          }
                        ],
                        "id": 876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9773:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9773:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9773:13:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "9773:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 874,
                  "id": 880,
                  "nodeType": "Return",
                  "src": "9766:28:2"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 882,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9726:2:2"
            },
            "returnParameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 873,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 882,
                  "src": "9751:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 872,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "9751:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9750:6:2"
            },
            "scope": 883,
            "src": "9707:94:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 884,
        "src": "737:9068:2"
      }
    ],
    "src": "33:9772:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/sodaba ulomi/Desktop/wslapp/contracts/SmallBusiness.sol",
      "exportedSymbols": {
        "InterfaceOfCuntract": [
          95
        ],
        "SmallBusiness": [
          883
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".24",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 130,
        "name": "PragmaDirective",
        "src": "33:32:2"
      },
      {
        "attributes": {
          "SourceUnit": 96,
          "absolutePath": "/C/Users/sodaba ulomi/Desktop/wslapp/contracts/InterfaceOfCuntract.sol",
          "file": "./InterfaceOfCuntract.sol",
          "scope": 884,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 131,
        "name": "ImportDirective",
        "src": "700:35:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            95
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            883,
            95
          ],
          "name": "SmallBusiness",
          "scope": 884
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "InterfaceOfCuntract",
                  "referencedDeclaration": 95,
                  "type": "contract InterfaceOfCuntract"
                },
                "id": 132,
                "name": "UserDefinedTypeName",
                "src": "763:19:2"
              }
            ],
            "id": 133,
            "name": "InheritanceSpecifier",
            "src": "763:19:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "8da5cb5b",
              "mutability": "mutable",
              "name": "owner",
              "scope": 883,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 134,
                "name": "ElementaryTypeName",
                "src": "811:7:2"
              }
            ],
            "id": 135,
            "name": "VariableDeclaration",
            "src": "811:20:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "553df021",
              "mutability": "mutable",
              "name": "deal",
              "scope": 883,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 136,
                "name": "ElementaryTypeName",
                "src": "838:4:2"
              }
            ],
            "id": 137,
            "name": "VariableDeclaration",
            "src": "838:16:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "En",
              "scope": 883,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "nonpayable",
                  "type": "address"
                },
                "id": 138,
                "name": "ElementaryTypeName",
                "src": "860:7:2"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": true,
                  "isPure": false,
                  "lValueRequested": false,
                  "member_name": "engineerAddress",
                  "referencedDeclaration": 156,
                  "type": "address payable"
                },
                "children": [
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "type": "struct SmallBusiness.Engineer storage ref"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 215,
                          "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                          "value": "Engineers"
                        },
                        "id": 139,
                        "name": "Identifier",
                        "src": "872:9:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "sender",
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4294967281,
                              "type": "msg",
                              "value": "msg"
                            },
                            "id": 140,
                            "name": "Identifier",
                            "src": "882:3:2"
                          }
                        ],
                        "id": 141,
                        "name": "MemberAccess",
                        "src": "882:10:2"
                      }
                    ],
                    "id": 142,
                    "name": "IndexAccess",
                    "src": "872:21:2"
                  }
                ],
                "id": 143,
                "name": "MemberAccess",
                "src": "872:37:2"
              }
            ],
            "id": 144,
            "name": "VariableDeclaration",
            "src": "860:49:2"
          },
          {
            "attributes": {
              "canonicalName": "SmallBusiness.State",
              "name": "State"
            },
            "children": [
              {
                "attributes": {
                  "name": "forSell"
                },
                "id": 145,
                "name": "EnumValue",
                "src": "945:7:2"
              },
              {
                "attributes": {
                  "name": "Finish"
                },
                "id": 146,
                "name": "EnumValue",
                "src": "960:6:2"
              },
              {
                "attributes": {
                  "name": "primsion"
                },
                "id": 147,
                "name": "EnumValue",
                "src": "974:8:2"
              },
              {
                "attributes": {
                  "name": "unprmision"
                },
                "id": 148,
                "name": "EnumValue",
                "src": "990:10:2"
              }
            ],
            "id": 149,
            "name": "EnumDefinition",
            "src": "927:79:2"
          },
          {
            "attributes": {
              "canonicalName": "SmallBusiness.customer",
              "name": "customer",
              "scope": 883,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "customerAddress",
                  "scope": 154,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address payable",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "payable",
                      "type": "address payable"
                    },
                    "id": 150,
                    "name": "ElementaryTypeName",
                    "src": "1070:15:2"
                  }
                ],
                "id": 151,
                "name": "VariableDeclaration",
                "src": "1070:31:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "Name",
                  "scope": 154,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 152,
                    "name": "ElementaryTypeName",
                    "src": "1111:6:2"
                  }
                ],
                "id": 153,
                "name": "VariableDeclaration",
                "src": "1111:11:2"
              }
            ],
            "id": 154,
            "name": "StructDefinition",
            "src": "1045:84:2"
          },
          {
            "attributes": {
              "canonicalName": "SmallBusiness.Engineer",
              "name": "Engineer",
              "scope": 883,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "engineerAddress",
                  "scope": 161,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address payable",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "payable",
                      "type": "address payable"
                    },
                    "id": 155,
                    "name": "ElementaryTypeName",
                    "src": "1188:15:2"
                  }
                ],
                "id": 156,
                "name": "VariableDeclaration",
                "src": "1188:31:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "Name",
                  "scope": 161,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 157,
                    "name": "ElementaryTypeName",
                    "src": "1229:6:2"
                  }
                ],
                "id": 158,
                "name": "VariableDeclaration",
                "src": "1229:11:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "state",
                  "scope": 161,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum SmallBusiness.State",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "State",
                      "referencedDeclaration": 149,
                      "type": "enum SmallBusiness.State"
                    },
                    "id": 159,
                    "name": "UserDefinedTypeName",
                    "src": "1250:5:2"
                  }
                ],
                "id": 160,
                "name": "VariableDeclaration",
                "src": "1250:11:2"
              }
            ],
            "id": 161,
            "name": "StructDefinition",
            "src": "1165:111:2"
          },
          {
            "attributes": {
              "canonicalName": "SmallBusiness.Project",
              "name": "Project",
              "scope": 883,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "scope": 174,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 162,
                    "name": "ElementaryTypeName",
                    "src": "1333:7:2"
                  }
                ],
                "id": 163,
                "name": "VariableDeclaration",
                "src": "1333:13:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "Name",
                  "scope": 174,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 164,
                    "name": "ElementaryTypeName",
                    "src": "1356:6:2"
                  }
                ],
                "id": 165,
                "name": "VariableDeclaration",
                "src": "1356:11:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "state",
                  "scope": 174,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum SmallBusiness.State",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "State",
                      "referencedDeclaration": 149,
                      "type": "enum SmallBusiness.State"
                    },
                    "id": 166,
                    "name": "UserDefinedTypeName",
                    "src": "1377:5:2"
                  }
                ],
                "id": 167,
                "name": "VariableDeclaration",
                "src": "1377:11:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "skills",
                  "scope": 174,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 168,
                    "name": "ElementaryTypeName",
                    "src": "1398:6:2"
                  }
                ],
                "id": 169,
                "name": "VariableDeclaration",
                "src": "1398:13:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "information",
                  "scope": 174,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 170,
                    "name": "ElementaryTypeName",
                    "src": "1421:6:2"
                  }
                ],
                "id": 171,
                "name": "VariableDeclaration",
                "src": "1421:18:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "averageOfprice",
                  "scope": 174,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 172,
                    "name": "ElementaryTypeName",
                    "src": "1449:4:2"
                  }
                ],
                "id": 173,
                "name": "VariableDeclaration",
                "src": "1449:19:2"
              }
            ],
            "id": 174,
            "name": "StructDefinition",
            "src": "1310:171:2"
          },
          {
            "attributes": {
              "canonicalName": "SmallBusiness.offer",
              "name": "offer",
              "scope": 883,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "price",
                  "scope": 181,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 175,
                    "name": "ElementaryTypeName",
                    "src": "1532:7:2"
                  }
                ],
                "id": 176,
                "name": "VariableDeclaration",
                "src": "1532:13:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "day",
                  "scope": 181,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 177,
                    "name": "ElementaryTypeName",
                    "src": "1555:7:2"
                  }
                ],
                "id": 178,
                "name": "VariableDeclaration",
                "src": "1555:11:2"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "moreInform",
                  "scope": 181,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "string",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 179,
                    "name": "ElementaryTypeName",
                    "src": "1576:6:2"
                  }
                ],
                "id": 180,
                "name": "VariableDeclaration",
                "src": "1576:17:2"
              }
            ],
            "id": 181,
            "name": "StructDefinition",
            "src": "1510:90:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "logAddCustomer"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Emitted when a Engineer is registred \n @param _address Engineer address"
                },
                "id": 182,
                "name": "StructuredDocumentation",
                "src": "1638:90:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "_address",
                      "scope": 186,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 183,
                        "name": "ElementaryTypeName",
                        "src": "1754:7:2"
                      }
                    ],
                    "id": 184,
                    "name": "VariableDeclaration",
                    "src": "1754:16:2"
                  }
                ],
                "id": 185,
                "name": "ParameterList",
                "src": "1753:18:2"
              }
            ],
            "id": 186,
            "name": "EventDefinition",
            "src": "1733:39:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "logAddEngineers"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Emitted when a customer is registred \n @param _address customer address"
                },
                "id": 187,
                "name": "StructuredDocumentation",
                "src": "1778:90:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "_address",
                      "scope": 191,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 188,
                        "name": "ElementaryTypeName",
                        "src": "1895:7:2"
                      }
                    ],
                    "id": 189,
                    "name": "VariableDeclaration",
                    "src": "1895:16:2"
                  }
                ],
                "id": 190,
                "name": "ParameterList",
                "src": "1894:18:2"
              }
            ],
            "id": 191,
            "name": "EventDefinition",
            "src": "1873:40:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "PostProject"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Emitted when a Project is posted \n @param _customerAddress is the address of Project"
                },
                "id": 192,
                "name": "StructuredDocumentation",
                "src": "1919:103:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 196,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 193,
                        "name": "ElementaryTypeName",
                        "src": "2045:7:2"
                      }
                    ],
                    "id": 194,
                    "name": "VariableDeclaration",
                    "src": "2045:24:2"
                  }
                ],
                "id": 195,
                "name": "ParameterList",
                "src": "2044:26:2"
              }
            ],
            "id": 196,
            "name": "EventDefinition",
            "src": "2027:44:2"
          },
          {
            "attributes": {
              "anonymous": false,
              "name": "chooseTheProject"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Emitted when Engineer add a price for working on project \n @param  _customerAddress is the address of Project\n @param price is the price that customer send to Engineer"
                },
                "id": 197,
                "name": "StructuredDocumentation",
                "src": "2077:193:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 203,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 198,
                        "name": "ElementaryTypeName",
                        "src": "2298:7:2"
                      }
                    ],
                    "id": 199,
                    "name": "VariableDeclaration",
                    "src": "2298:24:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "mutability": "mutable",
                      "name": "price",
                      "scope": 203,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 200,
                        "name": "ElementaryTypeName",
                        "src": "2325:4:2"
                      }
                    ],
                    "id": 201,
                    "name": "VariableDeclaration",
                    "src": "2325:10:2"
                  }
                ],
                "id": 202,
                "name": "ParameterList",
                "src": "2297:39:2"
              }
            ],
            "id": 203,
            "name": "EventDefinition",
            "src": "2275:62:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "413bf38f",
              "mutability": "mutable",
              "name": "offers",
              "scope": 883,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct SmallBusiness.offer)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct SmallBusiness.offer)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 204,
                    "name": "ElementaryTypeName",
                    "src": "2436:7:2"
                  },
                  {
                    "attributes": {
                      "name": "offer",
                      "referencedDeclaration": 181,
                      "type": "struct SmallBusiness.offer"
                    },
                    "id": 205,
                    "name": "UserDefinedTypeName",
                    "src": "2447:5:2"
                  }
                ],
                "id": 206,
                "name": "Mapping",
                "src": "2427:26:2"
              }
            ],
            "id": 207,
            "name": "VariableDeclaration",
            "src": "2427:40:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "336989ae",
              "mutability": "mutable",
              "name": "customers",
              "scope": 883,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct SmallBusiness.customer)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct SmallBusiness.customer)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 208,
                    "name": "ElementaryTypeName",
                    "src": "2550:7:2"
                  },
                  {
                    "attributes": {
                      "name": "customer",
                      "referencedDeclaration": 154,
                      "type": "struct SmallBusiness.customer"
                    },
                    "id": 209,
                    "name": "UserDefinedTypeName",
                    "src": "2561:8:2"
                  }
                ],
                "id": 210,
                "name": "Mapping",
                "src": "2542:28:2"
              }
            ],
            "id": 211,
            "name": "VariableDeclaration",
            "src": "2542:45:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "03bc470d",
              "mutability": "mutable",
              "name": "Engineers",
              "scope": 883,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct SmallBusiness.Engineer)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct SmallBusiness.Engineer)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 212,
                    "name": "ElementaryTypeName",
                    "src": "2671:7:2"
                  },
                  {
                    "attributes": {
                      "name": "Engineer",
                      "referencedDeclaration": 161,
                      "type": "struct SmallBusiness.Engineer"
                    },
                    "id": 213,
                    "name": "UserDefinedTypeName",
                    "src": "2681:8:2"
                  }
                ],
                "id": 214,
                "name": "Mapping",
                "src": "2662:28:2"
              }
            ],
            "id": 215,
            "name": "VariableDeclaration",
            "src": "2662:45:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "840e78fd",
              "mutability": "mutable",
              "name": "projects",
              "scope": 883,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct SmallBusiness.Project)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct SmallBusiness.Project)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 216,
                    "name": "ElementaryTypeName",
                    "src": "2791:7:2"
                  },
                  {
                    "attributes": {
                      "name": "Project",
                      "referencedDeclaration": 174,
                      "type": "struct SmallBusiness.Project"
                    },
                    "id": 217,
                    "name": "UserDefinedTypeName",
                    "src": "2802:7:2"
                  }
                ],
                "id": 218,
                "name": "Mapping",
                "src": "2782:28:2"
              }
            ],
            "id": 219,
            "name": "VariableDeclaration",
            "src": "2782:44:2"
          },
          {
            "attributes": {
              "name": "verifyCaller",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_address",
                      "scope": 232,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 220,
                        "name": "ElementaryTypeName",
                        "src": "2983:7:2"
                      }
                    ],
                    "id": 221,
                    "name": "VariableDeclaration",
                    "src": "2983:16:2"
                  }
                ],
                "id": 222,
                "name": "ParameterList",
                "src": "2982:18:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 223,
                            "name": "Identifier",
                            "src": "3008:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 224,
                                    "name": "Identifier",
                                    "src": "3017:3:2"
                                  }
                                ],
                                "id": 225,
                                "name": "MemberAccess",
                                "src": "3017:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 221,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 226,
                                "name": "Identifier",
                                "src": "3031:8:2"
                              }
                            ],
                            "id": 227,
                            "name": "BinaryOperation",
                            "src": "3017:22:2"
                          }
                        ],
                        "id": 228,
                        "name": "FunctionCall",
                        "src": "3008:32:2"
                      }
                    ],
                    "id": 229,
                    "name": "ExpressionStatement",
                    "src": "3008:32:2"
                  },
                  {
                    "id": 230,
                    "name": "PlaceholderStatement",
                    "src": "3047:1:2"
                  }
                ],
                "id": 231,
                "name": "Block",
                "src": "3001:54:2"
              }
            ],
            "id": 232,
            "name": "ModifierDefinition",
            "src": "2960:95:2"
          },
          {
            "attributes": {
              "name": "isOwner",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 233,
                "name": "ParameterList",
                "src": "3082:2:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2d10247a65709fdb3c0696b0ed760a0c246e12f8c496efb56291dd2fe3b0275d",
                                  "typeString": "literal_string \"Caller is not owner\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 234,
                            "name": "Identifier",
                            "src": "3092:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 135,
                                  "type": "address",
                                  "value": "owner"
                                },
                                "id": 235,
                                "name": "Identifier",
                                "src": "3101:5:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 236,
                                    "name": "Identifier",
                                    "src": "3110:3:2"
                                  }
                                ],
                                "id": 237,
                                "name": "MemberAccess",
                                "src": "3110:10:2"
                              }
                            ],
                            "id": 238,
                            "name": "BinaryOperation",
                            "src": "3101:19:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "43616c6c6572206973206e6f74206f776e6572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Caller is not owner\"",
                              "value": "Caller is not owner"
                            },
                            "id": 239,
                            "name": "Literal",
                            "src": "3126:21:2"
                          }
                        ],
                        "id": 240,
                        "name": "FunctionCall",
                        "src": "3092:56:2"
                      }
                    ],
                    "id": 241,
                    "name": "ExpressionStatement",
                    "src": "3092:56:2"
                  },
                  {
                    "id": 242,
                    "name": "PlaceholderStatement",
                    "src": "3155:1:2"
                  }
                ],
                "id": 243,
                "name": "Block",
                "src": "3085:78:2"
              }
            ],
            "id": 244,
            "name": "ModifierDefinition",
            "src": "3065:98:2"
          },
          {
            "attributes": {
              "name": "isCustomer",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_address",
                      "scope": 260,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 245,
                        "name": "ElementaryTypeName",
                        "src": "3190:7:2"
                      }
                    ],
                    "id": 246,
                    "name": "VariableDeclaration",
                    "src": "3190:16:2"
                  }
                ],
                "id": 247,
                "name": "ParameterList",
                "src": "3189:18:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_1a21e2482cff0d301e9da97ad72957e24a75f61fa8acf94fa888828436a186b5",
                                  "typeString": "literal_string \"this account is not Customer.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 248,
                            "name": "Identifier",
                            "src": "3217:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "customerAddress",
                                  "referencedDeclaration": 151,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.customer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 211,
                                          "type": "mapping(address => struct SmallBusiness.customer storage ref)",
                                          "value": "customers"
                                        },
                                        "id": 249,
                                        "name": "Identifier",
                                        "src": "3226:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 246,
                                          "type": "address",
                                          "value": "_address"
                                        },
                                        "id": 250,
                                        "name": "Identifier",
                                        "src": "3236:8:2"
                                      }
                                    ],
                                    "id": 251,
                                    "name": "IndexAccess",
                                    "src": "3226:19:2"
                                  }
                                ],
                                "id": 252,
                                "name": "MemberAccess",
                                "src": "3226:35:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 246,
                                  "type": "address",
                                  "value": "_address"
                                },
                                "id": 253,
                                "name": "Identifier",
                                "src": "3265:8:2"
                              }
                            ],
                            "id": 254,
                            "name": "BinaryOperation",
                            "src": "3226:47:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74686973206163636f756e74206973206e6f7420437573746f6d65722e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this account is not Customer.\"",
                              "value": "this account is not Customer."
                            },
                            "id": 255,
                            "name": "Literal",
                            "src": "3283:31:2"
                          }
                        ],
                        "id": 256,
                        "name": "FunctionCall",
                        "src": "3217:98:2"
                      }
                    ],
                    "id": 257,
                    "name": "ExpressionStatement",
                    "src": "3217:98:2"
                  },
                  {
                    "id": 258,
                    "name": "PlaceholderStatement",
                    "src": "3325:1:2"
                  }
                ],
                "id": 259,
                "name": "Block",
                "src": "3207:126:2"
              }
            ],
            "id": 260,
            "name": "ModifierDefinition",
            "src": "3170:163:2"
          },
          {
            "attributes": {
              "name": "isEngineer",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_Engineer",
                      "scope": 276,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 261,
                        "name": "ElementaryTypeName",
                        "src": "3363:7:2"
                      }
                    ],
                    "id": 262,
                    "name": "VariableDeclaration",
                    "src": "3363:17:2"
                  }
                ],
                "id": 263,
                "name": "ParameterList",
                "src": "3362:19:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b617bd5ec7b3a83916097c4d59b438904070317990f7dfa8afc1b45629c54eb5",
                                  "typeString": "literal_string \"caller isnot Engineer\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 264,
                            "name": "Identifier",
                            "src": "3391:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "engineerAddress",
                                  "referencedDeclaration": 156,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Engineer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 215,
                                          "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                          "value": "Engineers"
                                        },
                                        "id": 265,
                                        "name": "Identifier",
                                        "src": "3399:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 262,
                                          "type": "address",
                                          "value": "_Engineer"
                                        },
                                        "id": 266,
                                        "name": "Identifier",
                                        "src": "3409:9:2"
                                      }
                                    ],
                                    "id": 267,
                                    "name": "IndexAccess",
                                    "src": "3399:20:2"
                                  }
                                ],
                                "id": 268,
                                "name": "MemberAccess",
                                "src": "3399:36:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 262,
                                  "type": "address",
                                  "value": "_Engineer"
                                },
                                "id": 269,
                                "name": "Identifier",
                                "src": "3438:9:2"
                              }
                            ],
                            "id": 270,
                            "name": "BinaryOperation",
                            "src": "3399:48:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "63616c6c65722069736e6f7420456e67696e656572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"caller isnot Engineer\"",
                              "value": "caller isnot Engineer"
                            },
                            "id": 271,
                            "name": "Literal",
                            "src": "3457:23:2"
                          }
                        ],
                        "id": 272,
                        "name": "FunctionCall",
                        "src": "3391:90:2"
                      }
                    ],
                    "id": 273,
                    "name": "ExpressionStatement",
                    "src": "3391:90:2"
                  },
                  {
                    "id": 274,
                    "name": "PlaceholderStatement",
                    "src": "3491:1:2"
                  }
                ],
                "id": 275,
                "name": "Block",
                "src": "3381:118:2"
              }
            ],
            "id": 276,
            "name": "ModifierDefinition",
            "src": "3343:156:2"
          },
          {
            "attributes": {
              "name": "forSell",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 306,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 277,
                        "name": "ElementaryTypeName",
                        "src": "3522:7:2"
                      }
                    ],
                    "id": 278,
                    "name": "VariableDeclaration",
                    "src": "3522:24:2"
                  }
                ],
                "id": 279,
                "name": "ParameterList",
                "src": "3521:26:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                                  "typeString": "literal_string \"The project is not nothing\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 280,
                            "name": "Identifier",
                            "src": "3556:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "owner",
                                  "referencedDeclaration": 163,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Project storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 219,
                                          "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                          "value": "projects"
                                        },
                                        "id": 281,
                                        "name": "Identifier",
                                        "src": "3564:8:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 278,
                                          "type": "address",
                                          "value": "_customerAddress"
                                        },
                                        "id": 282,
                                        "name": "Identifier",
                                        "src": "3573:16:2"
                                      }
                                    ],
                                    "id": 283,
                                    "name": "IndexAccess",
                                    "src": "3564:26:2"
                                  }
                                ],
                                "id": 284,
                                "name": "MemberAccess",
                                "src": "3564:32:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 285,
                                        "name": "ElementaryTypeName",
                                        "src": "3600:7:2"
                                      }
                                    ],
                                    "id": 286,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "3600:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 287,
                                    "name": "Literal",
                                    "src": "3608:1:2"
                                  }
                                ],
                                "id": 288,
                                "name": "FunctionCall",
                                "src": "3600:10:2"
                              }
                            ],
                            "id": 289,
                            "name": "BinaryOperation",
                            "src": "3564:46:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5468652070726f6a656374206973206e6f74206e6f7468696e67",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"The project is not nothing\"",
                              "value": "The project is not nothing"
                            },
                            "id": 290,
                            "name": "Literal",
                            "src": "3620:28:2"
                          }
                        ],
                        "id": 291,
                        "name": "FunctionCall",
                        "src": "3556:93:2"
                      }
                    ],
                    "id": 292,
                    "name": "ExpressionStatement",
                    "src": "3556:93:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_48ad3683c258fceaa1c0746045810997cbaeec0c2f0385833b5777bb1d4628af",
                                  "typeString": "literal_string \"the project has already done..\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 293,
                            "name": "Identifier",
                            "src": "3658:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_State_$149",
                                "typeString": "enum SmallBusiness.State"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "state",
                                  "referencedDeclaration": 167,
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Project storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 219,
                                          "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                          "value": "projects"
                                        },
                                        "id": 294,
                                        "name": "Identifier",
                                        "src": "3666:8:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 278,
                                          "type": "address",
                                          "value": "_customerAddress"
                                        },
                                        "id": 295,
                                        "name": "Identifier",
                                        "src": "3675:16:2"
                                      }
                                    ],
                                    "id": 296,
                                    "name": "IndexAccess",
                                    "src": "3666:26:2"
                                  }
                                ],
                                "id": 297,
                                "name": "MemberAccess",
                                "src": "3666:32:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "forSell",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 149,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 298,
                                    "name": "Identifier",
                                    "src": "3702:5:2"
                                  }
                                ],
                                "id": 299,
                                "name": "MemberAccess",
                                "src": "3702:13:2"
                              }
                            ],
                            "id": 300,
                            "name": "BinaryOperation",
                            "src": "3666:49:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "7468652070726f6a6563742068617320616c726561647920646f6e652e2e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"the project has already done..\"",
                              "value": "the project has already done.."
                            },
                            "id": 301,
                            "name": "Literal",
                            "src": "3724:32:2"
                          }
                        ],
                        "id": 302,
                        "name": "FunctionCall",
                        "src": "3658:99:2"
                      }
                    ],
                    "id": 303,
                    "name": "ExpressionStatement",
                    "src": "3658:99:2"
                  },
                  {
                    "id": 304,
                    "name": "PlaceholderStatement",
                    "src": "3766:1:2"
                  }
                ],
                "id": 305,
                "name": "Block",
                "src": "3547:227:2"
              }
            ],
            "id": 306,
            "name": "ModifierDefinition",
            "src": "3505:269:2"
          },
          {
            "attributes": {
              "name": "Finish",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 336,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 307,
                        "name": "ElementaryTypeName",
                        "src": "3800:7:2"
                      }
                    ],
                    "id": 308,
                    "name": "VariableDeclaration",
                    "src": "3800:24:2"
                  }
                ],
                "id": 309,
                "name": "ParameterList",
                "src": "3799:26:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_0a89d2be47ba68643f6b4ac752dddbdfee69ce5edbe839b0d71bdc3985ffc848",
                                  "typeString": "literal_string \"The project is not nothing\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 310,
                            "name": "Identifier",
                            "src": "3834:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "owner",
                                  "referencedDeclaration": 163,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Project storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 219,
                                          "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                          "value": "projects"
                                        },
                                        "id": 311,
                                        "name": "Identifier",
                                        "src": "3842:8:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 308,
                                          "type": "address",
                                          "value": "_customerAddress"
                                        },
                                        "id": 312,
                                        "name": "Identifier",
                                        "src": "3851:16:2"
                                      }
                                    ],
                                    "id": 313,
                                    "name": "IndexAccess",
                                    "src": "3842:26:2"
                                  }
                                ],
                                "id": 314,
                                "name": "MemberAccess",
                                "src": "3842:32:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 315,
                                        "name": "ElementaryTypeName",
                                        "src": "3878:7:2"
                                      }
                                    ],
                                    "id": 316,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "3878:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 317,
                                    "name": "Literal",
                                    "src": "3886:1:2"
                                  }
                                ],
                                "id": 318,
                                "name": "FunctionCall",
                                "src": "3878:10:2"
                              }
                            ],
                            "id": 319,
                            "name": "BinaryOperation",
                            "src": "3842:46:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "5468652070726f6a656374206973206e6f74206e6f7468696e67",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"The project is not nothing\"",
                              "value": "The project is not nothing"
                            },
                            "id": 320,
                            "name": "Literal",
                            "src": "3898:28:2"
                          }
                        ],
                        "id": 321,
                        "name": "FunctionCall",
                        "src": "3834:93:2"
                      }
                    ],
                    "id": 322,
                    "name": "ExpressionStatement",
                    "src": "3834:93:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_fa3b5d1a096a651bb96b440efaaa92c2d2829964a79312f48fac5eece5415c6b",
                                  "typeString": "literal_string \"this Project has already been for sell\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 323,
                            "name": "Identifier",
                            "src": "3936:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_State_$149",
                                "typeString": "enum SmallBusiness.State"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "state",
                                  "referencedDeclaration": 167,
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Project storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 219,
                                          "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                          "value": "projects"
                                        },
                                        "id": 324,
                                        "name": "Identifier",
                                        "src": "3944:8:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 308,
                                          "type": "address",
                                          "value": "_customerAddress"
                                        },
                                        "id": 325,
                                        "name": "Identifier",
                                        "src": "3953:16:2"
                                      }
                                    ],
                                    "id": 326,
                                    "name": "IndexAccess",
                                    "src": "3944:26:2"
                                  }
                                ],
                                "id": 327,
                                "name": "MemberAccess",
                                "src": "3944:32:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Finish",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 149,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 328,
                                    "name": "Identifier",
                                    "src": "3980:5:2"
                                  }
                                ],
                                "id": 329,
                                "name": "MemberAccess",
                                "src": "3980:12:2"
                              }
                            ],
                            "id": 330,
                            "name": "BinaryOperation",
                            "src": "3944:48:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "746869732050726f6a6563742068617320616c7265616479206265656e20666f722073656c6c",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this Project has already been for sell\"",
                              "value": "this Project has already been for sell"
                            },
                            "id": 331,
                            "name": "Literal",
                            "src": "4001:40:2"
                          }
                        ],
                        "id": 332,
                        "name": "FunctionCall",
                        "src": "3936:106:2"
                      }
                    ],
                    "id": 333,
                    "name": "ExpressionStatement",
                    "src": "3936:106:2"
                  },
                  {
                    "id": 334,
                    "name": "PlaceholderStatement",
                    "src": "4051:1:2"
                  }
                ],
                "id": 335,
                "name": "Block",
                "src": "3825:234:2"
              }
            ],
            "id": 336,
            "name": "ModifierDefinition",
            "src": "3784:275:2"
          },
          {
            "attributes": {
              "name": "verifyState",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 337,
                "name": "ParameterList",
                "src": "4084:2:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_820863d9742345c6cc06a0445b8222575c685dbc118061dc54d90ac56718eed3",
                                  "typeString": "literal_string \"this account already set value\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 338,
                            "name": "Identifier",
                            "src": "4096:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_State_$149",
                                "typeString": "enum SmallBusiness.State"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "state",
                                  "referencedDeclaration": 160,
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Engineer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 215,
                                          "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                          "value": "Engineers"
                                        },
                                        "id": 339,
                                        "name": "Identifier",
                                        "src": "4104:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 340,
                                            "name": "Identifier",
                                            "src": "4114:3:2"
                                          }
                                        ],
                                        "id": 341,
                                        "name": "MemberAccess",
                                        "src": "4114:10:2"
                                      }
                                    ],
                                    "id": 342,
                                    "name": "IndexAccess",
                                    "src": "4104:21:2"
                                  }
                                ],
                                "id": 343,
                                "name": "MemberAccess",
                                "src": "4104:27:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "primsion",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 149,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 344,
                                    "name": "Identifier",
                                    "src": "4135:5:2"
                                  }
                                ],
                                "id": 345,
                                "name": "MemberAccess",
                                "src": "4135:14:2"
                              }
                            ],
                            "id": 346,
                            "name": "BinaryOperation",
                            "src": "4104:45:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74686973206163636f756e7420616c7265616479207365742076616c7565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this account already set value\"",
                              "value": "this account already set value"
                            },
                            "id": 347,
                            "name": "Literal",
                            "src": "4159:32:2"
                          }
                        ],
                        "id": 348,
                        "name": "FunctionCall",
                        "src": "4096:96:2"
                      }
                    ],
                    "id": 349,
                    "name": "ExpressionStatement",
                    "src": "4096:96:2"
                  },
                  {
                    "id": 350,
                    "name": "PlaceholderStatement",
                    "src": "4202:1:2"
                  }
                ],
                "id": 351,
                "name": "Block",
                "src": "4086:124:2"
              }
            ],
            "id": 352,
            "name": "ModifierDefinition",
            "src": "4064:146:2"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 883,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 353,
                "name": "ParameterList",
                "src": "4227:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 354,
                "name": "ParameterList",
                "src": "4230:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 135,
                              "type": "address",
                              "value": "owner"
                            },
                            "id": 355,
                            "name": "Identifier",
                            "src": "4240:5:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 356,
                                "name": "Identifier",
                                "src": "4248:3:2"
                              }
                            ],
                            "id": 357,
                            "name": "MemberAccess",
                            "src": "4248:10:2"
                          }
                        ],
                        "id": 358,
                        "name": "Assignment",
                        "src": "4240:18:2"
                      }
                    ],
                    "id": 359,
                    "name": "ExpressionStatement",
                    "src": "4240:18:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 137,
                              "type": "uint256",
                              "value": "deal"
                            },
                            "id": 360,
                            "name": "Identifier",
                            "src": "4268:4:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 361,
                            "name": "Literal",
                            "src": "4273:1:2"
                          }
                        ],
                        "id": 362,
                        "name": "Assignment",
                        "src": "4268:6:2"
                      }
                    ],
                    "id": 363,
                    "name": "ExpressionStatement",
                    "src": "4268:6:2"
                  }
                ],
                "id": 364,
                "name": "Block",
                "src": "4230:51:2"
              }
            ],
            "id": 365,
            "name": "FunctionDefinition",
            "src": "4216:65:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                12
              ],
              "functionSelector": "88bc8150",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addCustomer",
              "scope": 883,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 371,
                "name": "OverrideSpecifier",
                "src": "4485:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "customerAddress",
                      "scope": 410,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 366,
                        "name": "ElementaryTypeName",
                        "src": "4410:15:2"
                      }
                    ],
                    "id": 367,
                    "name": "VariableDeclaration",
                    "src": "4410:31:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "yourName",
                      "scope": 410,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 368,
                        "name": "ElementaryTypeName",
                        "src": "4449:6:2"
                      }
                    ],
                    "id": 369,
                    "name": "VariableDeclaration",
                    "src": "4449:22:2"
                  }
                ],
                "id": 370,
                "name": "ParameterList",
                "src": "4409:63:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 410,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 372,
                        "name": "ElementaryTypeName",
                        "src": "4507:4:2"
                      }
                    ],
                    "id": 373,
                    "name": "VariableDeclaration",
                    "src": "4507:4:2"
                  }
                ],
                "id": 374,
                "name": "ParameterList",
                "src": "4506:6:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_cea4d4fa71e7864649d08ce6f83215c1bf137c9a1ac10210dfa3a69790c872cd",
                                  "typeString": "literal_string \"this address is already registred\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 375,
                            "name": "Identifier",
                            "src": "4523:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "customerAddress",
                                  "referencedDeclaration": 151,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.customer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 211,
                                          "type": "mapping(address => struct SmallBusiness.customer storage ref)",
                                          "value": "customers"
                                        },
                                        "id": 376,
                                        "name": "Identifier",
                                        "src": "4531:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 367,
                                          "type": "address payable",
                                          "value": "customerAddress"
                                        },
                                        "id": 377,
                                        "name": "Identifier",
                                        "src": "4541:15:2"
                                      }
                                    ],
                                    "id": 378,
                                    "name": "IndexAccess",
                                    "src": "4531:26:2"
                                  }
                                ],
                                "id": 379,
                                "name": "MemberAccess",
                                "src": "4531:42:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 380,
                                        "name": "ElementaryTypeName",
                                        "src": "4577:7:2"
                                      }
                                    ],
                                    "id": 381,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "4577:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 382,
                                    "name": "Literal",
                                    "src": "4585:1:2"
                                  }
                                ],
                                "id": 383,
                                "name": "FunctionCall",
                                "src": "4577:10:2"
                              }
                            ],
                            "id": 384,
                            "name": "BinaryOperation",
                            "src": "4531:56:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74686973206164647265737320697320616c726561647920726567697374726564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this address is already registred\"",
                              "value": "this address is already registred"
                            },
                            "id": 385,
                            "name": "Literal",
                            "src": "4597:35:2"
                          }
                        ],
                        "id": 386,
                        "name": "FunctionCall",
                        "src": "4523:110:2"
                      }
                    ],
                    "id": 387,
                    "name": "ExpressionStatement",
                    "src": "4523:110:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SmallBusiness.customer storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SmallBusiness.customer storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 211,
                                  "type": "mapping(address => struct SmallBusiness.customer storage ref)",
                                  "value": "customers"
                                },
                                "id": 388,
                                "name": "Identifier",
                                "src": "4643:9:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 367,
                                  "type": "address payable",
                                  "value": "customerAddress"
                                },
                                "id": 389,
                                "name": "Identifier",
                                "src": "4653:15:2"
                              }
                            ],
                            "id": 390,
                            "name": "IndexAccess",
                            "src": "4643:26:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "customerAddress",
                                "Name"
                              ],
                              "tryCall": false,
                              "type": "struct SmallBusiness.customer memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 154,
                                  "type": "type(struct SmallBusiness.customer storage pointer)",
                                  "value": "customer"
                                },
                                "id": 391,
                                "name": "Identifier",
                                "src": "4670:8:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 367,
                                  "type": "address payable",
                                  "value": "customerAddress"
                                },
                                "id": 392,
                                "name": "Identifier",
                                "src": "4711:15:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 369,
                                  "type": "string memory",
                                  "value": "yourName"
                                },
                                "id": 393,
                                "name": "Identifier",
                                "src": "4747:8:2"
                              }
                            ],
                            "id": 394,
                            "name": "FunctionCall",
                            "src": "4670:96:2"
                          }
                        ],
                        "id": 395,
                        "name": "Assignment",
                        "src": "4643:123:2"
                      }
                    ],
                    "id": 396,
                    "name": "ExpressionStatement",
                    "src": "4643:123:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 186,
                              "type": "function (address)",
                              "value": "logAddCustomer"
                            },
                            "id": 397,
                            "name": "Identifier",
                            "src": "4781:14:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 367,
                              "type": "address payable",
                              "value": "customerAddress"
                            },
                            "id": 398,
                            "name": "Identifier",
                            "src": "4796:15:2"
                          }
                        ],
                        "id": 399,
                        "name": "FunctionCall",
                        "src": "4781:31:2"
                      }
                    ],
                    "id": 400,
                    "name": "EmitStatement",
                    "src": "4776:36:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 137,
                              "type": "uint256",
                              "value": "deal"
                            },
                            "id": 401,
                            "name": "Identifier",
                            "src": "4822:4:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 137,
                                  "type": "uint256",
                                  "value": "deal"
                                },
                                "id": 402,
                                "name": "Identifier",
                                "src": "4829:4:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 403,
                                "name": "Literal",
                                "src": "4836:1:2"
                              }
                            ],
                            "id": 404,
                            "name": "BinaryOperation",
                            "src": "4829:8:2"
                          }
                        ],
                        "id": 405,
                        "name": "Assignment",
                        "src": "4822:15:2"
                      }
                    ],
                    "id": 406,
                    "name": "ExpressionStatement",
                    "src": "4822:15:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 374
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 407,
                        "name": "Literal",
                        "src": "4854:4:2"
                      }
                    ],
                    "id": 408,
                    "name": "Return",
                    "src": "4847:11:2"
                  }
                ],
                "id": 409,
                "name": "Block",
                "src": "4513:352:2"
              }
            ],
            "id": 410,
            "name": "FunctionDefinition",
            "src": "4389:476:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                22
              ],
              "functionSelector": "a871ca5d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addEngineer",
              "scope": 883,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 416,
                "name": "OverrideSpecifier",
                "src": "5063:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_engineerAddress",
                      "scope": 457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 411,
                        "name": "ElementaryTypeName",
                        "src": "4998:15:2"
                      }
                    ],
                    "id": 412,
                    "name": "VariableDeclaration",
                    "src": "4998:32:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_yourName",
                      "scope": 457,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 413,
                        "name": "ElementaryTypeName",
                        "src": "5031:6:2"
                      }
                    ],
                    "id": 414,
                    "name": "VariableDeclaration",
                    "src": "5031:23:2"
                  }
                ],
                "id": 415,
                "name": "ParameterList",
                "src": "4997:58:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 457,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 417,
                        "name": "ElementaryTypeName",
                        "src": "5080:4:2"
                      }
                    ],
                    "id": 418,
                    "name": "VariableDeclaration",
                    "src": "5080:4:2"
                  }
                ],
                "id": 419,
                "name": "ParameterList",
                "src": "5079:6:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_2f02aa03166603fb488119f4e88edc7ae399185607c207053aa2dc7b20d01dbf",
                                  "typeString": "literal_string \"this address already registred.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 420,
                            "name": "Identifier",
                            "src": "5095:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "engineerAddress",
                                  "referencedDeclaration": 156,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Engineer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 215,
                                          "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                          "value": "Engineers"
                                        },
                                        "id": 421,
                                        "name": "Identifier",
                                        "src": "5103:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 412,
                                          "type": "address payable",
                                          "value": "_engineerAddress"
                                        },
                                        "id": 422,
                                        "name": "Identifier",
                                        "src": "5113:16:2"
                                      }
                                    ],
                                    "id": 423,
                                    "name": "IndexAccess",
                                    "src": "5103:27:2"
                                  }
                                ],
                                "id": 424,
                                "name": "MemberAccess",
                                "src": "5103:43:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 425,
                                        "name": "ElementaryTypeName",
                                        "src": "5150:7:2"
                                      }
                                    ],
                                    "id": 426,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "5150:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 427,
                                    "name": "Literal",
                                    "src": "5158:1:2"
                                  }
                                ],
                                "id": 428,
                                "name": "FunctionCall",
                                "src": "5150:10:2"
                              }
                            ],
                            "id": 429,
                            "name": "BinaryOperation",
                            "src": "5103:57:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74686973206164647265737320616c7265616479207265676973747265642e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this address already registred.\"",
                              "value": "this address already registred."
                            },
                            "id": 430,
                            "name": "Literal",
                            "src": "5170:33:2"
                          }
                        ],
                        "id": 431,
                        "name": "FunctionCall",
                        "src": "5095:109:2"
                      }
                    ],
                    "id": 432,
                    "name": "ExpressionStatement",
                    "src": "5095:109:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SmallBusiness.Engineer storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SmallBusiness.Engineer storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 215,
                                  "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                  "value": "Engineers"
                                },
                                "id": 433,
                                "name": "Identifier",
                                "src": "5214:9:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 412,
                                  "type": "address payable",
                                  "value": "_engineerAddress"
                                },
                                "id": 434,
                                "name": "Identifier",
                                "src": "5224:16:2"
                              }
                            ],
                            "id": 435,
                            "name": "IndexAccess",
                            "src": "5214:27:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "engineerAddress",
                                "Name",
                                "state"
                              ],
                              "tryCall": false,
                              "type": "struct SmallBusiness.Engineer memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_State_$149",
                                      "typeString": "enum SmallBusiness.State"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 161,
                                  "type": "type(struct SmallBusiness.Engineer storage pointer)",
                                  "value": "Engineer"
                                },
                                "id": 436,
                                "name": "Identifier",
                                "src": "5244:8:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 412,
                                  "type": "address payable",
                                  "value": "_engineerAddress"
                                },
                                "id": 437,
                                "name": "Identifier",
                                "src": "5285:16:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 414,
                                  "type": "string memory",
                                  "value": "_yourName"
                                },
                                "id": 438,
                                "name": "Identifier",
                                "src": "5321:9:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "primsion",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 149,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 439,
                                    "name": "Identifier",
                                    "src": "5351:5:2"
                                  }
                                ],
                                "id": 440,
                                "name": "MemberAccess",
                                "src": "5351:14:2"
                              }
                            ],
                            "id": 441,
                            "name": "FunctionCall",
                            "src": "5244:132:2"
                          }
                        ],
                        "id": 442,
                        "name": "Assignment",
                        "src": "5214:162:2"
                      }
                    ],
                    "id": 443,
                    "name": "ExpressionStatement",
                    "src": "5214:162:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 191,
                              "type": "function (address)",
                              "value": "logAddEngineers"
                            },
                            "id": 444,
                            "name": "Identifier",
                            "src": "5387:15:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 412,
                              "type": "address payable",
                              "value": "_engineerAddress"
                            },
                            "id": 445,
                            "name": "Identifier",
                            "src": "5403:16:2"
                          }
                        ],
                        "id": 446,
                        "name": "FunctionCall",
                        "src": "5387:33:2"
                      }
                    ],
                    "id": 447,
                    "name": "EmitStatement",
                    "src": "5382:38:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 137,
                              "type": "uint256",
                              "value": "deal"
                            },
                            "id": 448,
                            "name": "Identifier",
                            "src": "5427:4:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 137,
                                  "type": "uint256",
                                  "value": "deal"
                                },
                                "id": 449,
                                "name": "Identifier",
                                "src": "5434:4:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 450,
                                "name": "Literal",
                                "src": "5441:1:2"
                              }
                            ],
                            "id": 451,
                            "name": "BinaryOperation",
                            "src": "5434:8:2"
                          }
                        ],
                        "id": 452,
                        "name": "Assignment",
                        "src": "5427:15:2"
                      }
                    ],
                    "id": 453,
                    "name": "ExpressionStatement",
                    "src": "5427:15:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 419
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 454,
                        "name": "Literal",
                        "src": "5455:4:2"
                      }
                    ],
                    "id": 455,
                    "name": "Return",
                    "src": "5448:11:2"
                  }
                ],
                "id": 456,
                "name": "Block",
                "src": "5085:382:2"
              }
            ],
            "id": 457,
            "name": "FunctionDefinition",
            "src": "4977:490:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                36
              ],
              "functionSelector": "20943f7a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "addProject",
              "scope": 883,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": "add Project`s id in to mapping\ncheck the state of project should be forSell\ncheck the modifier is customer to call that function \nthe customer should call that function"
                },
                "id": 458,
                "name": "StructuredDocumentation",
                "src": "5477:192:2"
              },
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 468,
                "name": "OverrideSpecifier",
                "src": "5809:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "Name",
                      "scope": 528,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 459,
                        "name": "ElementaryTypeName",
                        "src": "5699:6:2"
                      }
                    ],
                    "id": 460,
                    "name": "VariableDeclaration",
                    "src": "5699:18:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "skills",
                      "scope": 528,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 461,
                        "name": "ElementaryTypeName",
                        "src": "5723:6:2"
                      }
                    ],
                    "id": 462,
                    "name": "VariableDeclaration",
                    "src": "5723:20:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "information",
                      "scope": 528,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 463,
                        "name": "ElementaryTypeName",
                        "src": "5744:6:2"
                      }
                    ],
                    "id": 464,
                    "name": "VariableDeclaration",
                    "src": "5744:25:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "averageOfprice",
                      "scope": 528,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 465,
                        "name": "ElementaryTypeName",
                        "src": "5775:4:2"
                      }
                    ],
                    "id": 466,
                    "name": "VariableDeclaration",
                    "src": "5775:19:2"
                  }
                ],
                "id": 467,
                "name": "ParameterList",
                "src": "5698:98:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 528,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 473,
                        "name": "ElementaryTypeName",
                        "src": "5869:4:2"
                      }
                    ],
                    "id": 474,
                    "name": "VariableDeclaration",
                    "src": "5869:4:2"
                  }
                ],
                "id": 475,
                "name": "ParameterList",
                "src": "5868:6:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 232,
                      "type": "modifier (address)",
                      "value": "verifyCaller"
                    },
                    "id": 469,
                    "name": "Identifier",
                    "src": "5831:12:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 470,
                        "name": "Identifier",
                        "src": "5844:3:2"
                      }
                    ],
                    "id": 471,
                    "name": "MemberAccess",
                    "src": "5844:10:2"
                  }
                ],
                "id": 472,
                "name": "ModifierInvocation",
                "src": "5831:24:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_da9b8ddb4929eb16dec1eb567070cd3dbd4e024729714b8dd3a83a48d9db14c1",
                                  "typeString": "literal_string \"this project already is exist.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 476,
                            "name": "Identifier",
                            "src": "5884:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "owner",
                                  "referencedDeclaration": 163,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Project storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 219,
                                          "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                          "value": "projects"
                                        },
                                        "id": 477,
                                        "name": "Identifier",
                                        "src": "5892:8:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 478,
                                            "name": "Identifier",
                                            "src": "5901:3:2"
                                          }
                                        ],
                                        "id": 479,
                                        "name": "MemberAccess",
                                        "src": "5901:10:2"
                                      }
                                    ],
                                    "id": 480,
                                    "name": "IndexAccess",
                                    "src": "5892:20:2"
                                  }
                                ],
                                "id": 481,
                                "name": "MemberAccess",
                                "src": "5892:26:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 482,
                                        "name": "ElementaryTypeName",
                                        "src": "5922:7:2"
                                      }
                                    ],
                                    "id": 483,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "5922:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 484,
                                    "name": "Literal",
                                    "src": "5930:1:2"
                                  }
                                ],
                                "id": 485,
                                "name": "FunctionCall",
                                "src": "5922:10:2"
                              }
                            ],
                            "id": 486,
                            "name": "BinaryOperation",
                            "src": "5892:40:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "746869732070726f6a65637420616c72656164792069732065786973742e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this project already is exist.\"",
                              "value": "this project already is exist."
                            },
                            "id": 487,
                            "name": "Literal",
                            "src": "5943:32:2"
                          }
                        ],
                        "id": 488,
                        "name": "FunctionCall",
                        "src": "5884:92:2"
                      }
                    ],
                    "id": 489,
                    "name": "ExpressionStatement",
                    "src": "5884:92:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7f626ceb74ac075baf1a9780a1808432c8439e35ad343e8b0986b7bae7fa9ec1",
                                  "typeString": "literal_string \"the value you send should be less than your current average.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 490,
                            "name": "Identifier",
                            "src": "5986:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "value",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 491,
                                    "name": "Identifier",
                                    "src": "5994:3:2"
                                  }
                                ],
                                "id": 492,
                                "name": "MemberAccess",
                                "src": "5994:9:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 466,
                                  "type": "uint256",
                                  "value": "averageOfprice"
                                },
                                "id": 493,
                                "name": "Identifier",
                                "src": "6005:14:2"
                              }
                            ],
                            "id": 494,
                            "name": "BinaryOperation",
                            "src": "5994:25:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "7468652076616c756520796f752073656e642073686f756c64206265206c657373207468616e20796f75722063757272656e7420617665726167652e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"the value you send should be less than your current average.\"",
                              "value": "the value you send should be less than your current average."
                            },
                            "id": 495,
                            "name": "Literal",
                            "src": "6029:62:2"
                          }
                        ],
                        "id": 496,
                        "name": "FunctionCall",
                        "src": "5986:106:2"
                      }
                    ],
                    "id": 497,
                    "name": "ExpressionStatement",
                    "src": "5986:106:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SmallBusiness.Project storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 219,
                                  "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                                  "value": "projects"
                                },
                                "id": 498,
                                "name": "Identifier",
                                "src": "6102:8:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 499,
                                    "name": "Identifier",
                                    "src": "6111:3:2"
                                  }
                                ],
                                "id": 500,
                                "name": "MemberAccess",
                                "src": "6111:10:2"
                              }
                            ],
                            "id": 501,
                            "name": "IndexAccess",
                            "src": "6102:20:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "owner",
                                "Name",
                                "skills",
                                "information",
                                "averageOfprice",
                                "state"
                              ],
                              "tryCall": false,
                              "type": "struct SmallBusiness.Project memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_State_$149",
                                      "typeString": "enum SmallBusiness.State"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 174,
                                  "type": "type(struct SmallBusiness.Project storage pointer)",
                                  "value": "Project"
                                },
                                "id": 502,
                                "name": "Identifier",
                                "src": "6125:7:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 503,
                                    "name": "Identifier",
                                    "src": "6153:3:2"
                                  }
                                ],
                                "id": 504,
                                "name": "MemberAccess",
                                "src": "6153:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 460,
                                  "type": "string memory",
                                  "value": "Name"
                                },
                                "id": 505,
                                "name": "Identifier",
                                "src": "6182:4:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 462,
                                  "type": "string memory",
                                  "value": "skills"
                                },
                                "id": 506,
                                "name": "Identifier",
                                "src": "6207:6:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 464,
                                  "type": "string memory",
                                  "value": "information"
                                },
                                "id": 507,
                                "name": "Identifier",
                                "src": "6239:11:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 466,
                                  "type": "uint256",
                                  "value": "averageOfprice"
                                },
                                "id": 508,
                                "name": "Identifier",
                                "src": "6279:14:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "forSell",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 149,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 509,
                                    "name": "Identifier",
                                    "src": "6313:5:2"
                                  }
                                ],
                                "id": 510,
                                "name": "MemberAccess",
                                "src": "6313:13:2"
                              }
                            ],
                            "id": 511,
                            "name": "FunctionCall",
                            "src": "6125:229:2"
                          }
                        ],
                        "id": 512,
                        "name": "Assignment",
                        "src": "6102:252:2"
                      }
                    ],
                    "id": 513,
                    "name": "ExpressionStatement",
                    "src": "6102:252:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 137,
                              "type": "uint256",
                              "value": "deal"
                            },
                            "id": 514,
                            "name": "Identifier",
                            "src": "6364:4:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "+",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 137,
                                  "type": "uint256",
                                  "value": "deal"
                                },
                                "id": 515,
                                "name": "Identifier",
                                "src": "6371:4:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 516,
                                "name": "Literal",
                                "src": "6378:1:2"
                              }
                            ],
                            "id": 517,
                            "name": "BinaryOperation",
                            "src": "6371:8:2"
                          }
                        ],
                        "id": 518,
                        "name": "Assignment",
                        "src": "6364:15:2"
                      }
                    ],
                    "id": 519,
                    "name": "ExpressionStatement",
                    "src": "6364:15:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 196,
                              "type": "function (address)",
                              "value": "PostProject"
                            },
                            "id": 520,
                            "name": "Identifier",
                            "src": "6394:11:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 521,
                                "name": "Identifier",
                                "src": "6406:3:2"
                              }
                            ],
                            "id": 522,
                            "name": "MemberAccess",
                            "src": "6406:10:2"
                          }
                        ],
                        "id": 523,
                        "name": "FunctionCall",
                        "src": "6394:23:2"
                      }
                    ],
                    "id": 524,
                    "name": "EmitStatement",
                    "src": "6389:28:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 475
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 525,
                        "name": "Literal",
                        "src": "6434:4:2"
                      }
                    ],
                    "id": 526,
                    "name": "Return",
                    "src": "6427:11:2"
                  }
                ],
                "id": 527,
                "name": "Block",
                "src": "5874:571:2"
              }
            ],
            "id": 528,
            "name": "FunctionDefinition",
            "src": "5679:766:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                78
              ],
              "functionSelector": "78e4f934",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "chooseToWork",
              "scope": 883,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 538,
                "name": "OverrideSpecifier",
                "src": "6559:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 580,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 529,
                        "name": "ElementaryTypeName",
                        "src": "6473:7:2"
                      }
                    ],
                    "id": 530,
                    "name": "VariableDeclaration",
                    "src": "6473:24:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "day",
                      "scope": 580,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 531,
                        "name": "ElementaryTypeName",
                        "src": "6498:7:2"
                      }
                    ],
                    "id": 532,
                    "name": "VariableDeclaration",
                    "src": "6498:11:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "price",
                      "scope": 580,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 533,
                        "name": "ElementaryTypeName",
                        "src": "6511:4:2"
                      }
                    ],
                    "id": 534,
                    "name": "VariableDeclaration",
                    "src": "6511:10:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "information",
                      "scope": 580,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 535,
                        "name": "ElementaryTypeName",
                        "src": "6524:6:2"
                      }
                    ],
                    "id": 536,
                    "name": "VariableDeclaration",
                    "src": "6524:25:2"
                  }
                ],
                "id": 537,
                "name": "ParameterList",
                "src": "6472:78:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 580,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 548,
                        "name": "ElementaryTypeName",
                        "src": "6646:6:2"
                      }
                    ],
                    "id": 549,
                    "name": "VariableDeclaration",
                    "src": "6646:13:2"
                  }
                ],
                "id": 550,
                "name": "ParameterList",
                "src": "6645:15:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 276,
                      "type": "modifier (address)",
                      "value": "isEngineer"
                    },
                    "id": 539,
                    "name": "Identifier",
                    "src": "6568:10:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 540,
                        "name": "Identifier",
                        "src": "6579:3:2"
                      }
                    ],
                    "id": 541,
                    "name": "MemberAccess",
                    "src": "6579:10:2"
                  }
                ],
                "id": 542,
                "name": "ModifierInvocation",
                "src": "6568:22:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 306,
                      "type": "modifier (address)",
                      "value": "forSell"
                    },
                    "id": 543,
                    "name": "Identifier",
                    "src": "6593:7:2"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 530,
                      "type": "address",
                      "value": "_customerAddress"
                    },
                    "id": 544,
                    "name": "Identifier",
                    "src": "6601:16:2"
                  }
                ],
                "id": 545,
                "name": "ModifierInvocation",
                "src": "6593:25:2"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 352,
                      "type": "modifier ()",
                      "value": "verifyState"
                    },
                    "id": 546,
                    "name": "Identifier",
                    "src": "6619:11:2"
                  }
                ],
                "id": 547,
                "name": "ModifierInvocation",
                "src": "6619:13:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SmallBusiness.offer storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SmallBusiness.offer storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 207,
                                  "type": "mapping(address => struct SmallBusiness.offer storage ref)",
                                  "value": "offers"
                                },
                                "id": 551,
                                "name": "Identifier",
                                "src": "6670:6:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 552,
                                    "name": "Identifier",
                                    "src": "6677:3:2"
                                  }
                                ],
                                "id": 553,
                                "name": "MemberAccess",
                                "src": "6677:10:2"
                              }
                            ],
                            "id": 554,
                            "name": "IndexAccess",
                            "src": "6670:18:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "price",
                                "day",
                                "moreInform"
                              ],
                              "tryCall": false,
                              "type": "struct SmallBusiness.offer memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 181,
                                  "type": "type(struct SmallBusiness.offer storage pointer)",
                                  "value": "offer"
                                },
                                "id": 555,
                                "name": "Identifier",
                                "src": "6691:5:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 534,
                                  "type": "uint256",
                                  "value": "price"
                                },
                                "id": 556,
                                "name": "Identifier",
                                "src": "6718:5:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 532,
                                  "type": "uint256",
                                  "value": "day"
                                },
                                "id": 557,
                                "name": "Identifier",
                                "src": "6741:3:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 536,
                                  "type": "string memory",
                                  "value": "information"
                                },
                                "id": 558,
                                "name": "Identifier",
                                "src": "6769:11:2"
                              }
                            ],
                            "id": 559,
                            "name": "FunctionCall",
                            "src": "6691:100:2"
                          }
                        ],
                        "id": 560,
                        "name": "Assignment",
                        "src": "6670:121:2"
                      }
                    ],
                    "id": 561,
                    "name": "ExpressionStatement",
                    "src": "6670:121:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$149",
                            "typeString": "enum SmallBusiness.State"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "state",
                              "referencedDeclaration": 160,
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SmallBusiness.Engineer storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 215,
                                      "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                      "value": "Engineers"
                                    },
                                    "id": 562,
                                    "name": "Identifier",
                                    "src": "6801:9:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 563,
                                        "name": "Identifier",
                                        "src": "6811:3:2"
                                      }
                                    ],
                                    "id": 564,
                                    "name": "MemberAccess",
                                    "src": "6811:10:2"
                                  }
                                ],
                                "id": 565,
                                "name": "IndexAccess",
                                "src": "6801:21:2"
                              }
                            ],
                            "id": 566,
                            "name": "MemberAccess",
                            "src": "6801:27:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "unprmision",
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 149,
                                  "type": "type(enum SmallBusiness.State)",
                                  "value": "State"
                                },
                                "id": 567,
                                "name": "Identifier",
                                "src": "6832:5:2"
                              }
                            ],
                            "id": 568,
                            "name": "MemberAccess",
                            "src": "6832:16:2"
                          }
                        ],
                        "id": 569,
                        "name": "BinaryOperation",
                        "src": "6801:47:2"
                      }
                    ],
                    "id": 570,
                    "name": "ExpressionStatement",
                    "src": "6801:47:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 203,
                              "type": "function (address,uint256)",
                              "value": "chooseTheProject"
                            },
                            "id": 571,
                            "name": "Identifier",
                            "src": "6863:16:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 572,
                                "name": "Identifier",
                                "src": "6880:3:2"
                              }
                            ],
                            "id": 573,
                            "name": "MemberAccess",
                            "src": "6880:10:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 534,
                              "type": "uint256",
                              "value": "price"
                            },
                            "id": 574,
                            "name": "Identifier",
                            "src": "6891:5:2"
                          }
                        ],
                        "id": 575,
                        "name": "FunctionCall",
                        "src": "6863:34:2"
                      }
                    ],
                    "id": 576,
                    "name": "EmitStatement",
                    "src": "6858:39:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 550
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "7365742076616c7565206f6e2070726f6a656374",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"set value on project\"",
                          "value": "set value on project"
                        },
                        "id": 577,
                        "name": "Literal",
                        "src": "6914:22:2"
                      }
                    ],
                    "id": 578,
                    "name": "Return",
                    "src": "6907:29:2"
                  }
                ],
                "id": 579,
                "name": "Block",
                "src": "6660:283:2"
              }
            ],
            "id": 580,
            "name": "FunctionDefinition",
            "src": "6451:492:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                86
              ],
              "functionSelector": "3d8f426d",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "accepteCustomer",
              "scope": 883,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 584,
                "name": "OverrideSpecifier",
                "src": "7023:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_engineerAddress",
                      "scope": 662,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 581,
                        "name": "ElementaryTypeName",
                        "src": "6974:15:2"
                      }
                    ],
                    "id": 582,
                    "name": "VariableDeclaration",
                    "src": "6974:32:2"
                  }
                ],
                "id": 583,
                "name": "ParameterList",
                "src": "6973:34:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 662,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 593,
                        "name": "ElementaryTypeName",
                        "src": "7083:4:2"
                      }
                    ],
                    "id": 594,
                    "name": "VariableDeclaration",
                    "src": "7083:4:2"
                  }
                ],
                "id": 595,
                "name": "ParameterList",
                "src": "7082:6:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 260,
                      "type": "modifier (address)",
                      "value": "isCustomer"
                    },
                    "id": 585,
                    "name": "Identifier",
                    "src": "7032:10:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 586,
                        "name": "Identifier",
                        "src": "7043:3:2"
                      }
                    ],
                    "id": 587,
                    "name": "MemberAccess",
                    "src": "7043:10:2"
                  }
                ],
                "id": 588,
                "name": "ModifierInvocation",
                "src": "7032:22:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 306,
                      "type": "modifier (address)",
                      "value": "forSell"
                    },
                    "id": 589,
                    "name": "Identifier",
                    "src": "7055:7:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 590,
                        "name": "Identifier",
                        "src": "7063:3:2"
                      }
                    ],
                    "id": 591,
                    "name": "MemberAccess",
                    "src": "7063:10:2"
                  }
                ],
                "id": 592,
                "name": "ModifierInvocation",
                "src": "7055:19:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_a3a575e1768ec30c540f377844b39a498d9b629f44612d5fc9eadb9e3d723a59",
                                  "typeString": "literal_string \"this account is not an engineer\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 596,
                            "name": "Identifier",
                            "src": "7099:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "engineerAddress",
                                  "referencedDeclaration": 156,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.Engineer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 215,
                                          "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                                          "value": "Engineers"
                                        },
                                        "id": 597,
                                        "name": "Identifier",
                                        "src": "7107:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 582,
                                          "type": "address payable",
                                          "value": "_engineerAddress"
                                        },
                                        "id": 598,
                                        "name": "Identifier",
                                        "src": "7117:16:2"
                                      }
                                    ],
                                    "id": 599,
                                    "name": "IndexAccess",
                                    "src": "7107:27:2"
                                  }
                                ],
                                "id": 600,
                                "name": "MemberAccess",
                                "src": "7107:43:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 582,
                                  "type": "address payable",
                                  "value": "_engineerAddress"
                                },
                                "id": 601,
                                "name": "Identifier",
                                "src": "7154:16:2"
                              }
                            ],
                            "id": 602,
                            "name": "BinaryOperation",
                            "src": "7107:63:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74686973206163636f756e74206973206e6f7420616e20656e67696e656572",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this account is not an engineer\"",
                              "value": "this account is not an engineer"
                            },
                            "id": 603,
                            "name": "Literal",
                            "src": "7185:33:2"
                          }
                        ],
                        "id": 604,
                        "name": "FunctionCall",
                        "src": "7099:120:2"
                      }
                    ],
                    "id": 605,
                    "name": "ExpressionStatement",
                    "src": "7099:120:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e0de5b351d6557eb48e363761cf6090d3026541521fe1e3365103722e0582e41",
                                  "typeString": "literal_string \"this customer is not Exist.\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 606,
                            "name": "Identifier",
                            "src": "7229:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "customerAddress",
                                  "referencedDeclaration": 151,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SmallBusiness.customer storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 211,
                                          "type": "mapping(address => struct SmallBusiness.customer storage ref)",
                                          "value": "customers"
                                        },
                                        "id": 607,
                                        "name": "Identifier",
                                        "src": "7237:9:2"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 4294967281,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 608,
                                            "name": "Identifier",
                                            "src": "7247:3:2"
                                          }
                                        ],
                                        "id": 609,
                                        "name": "MemberAccess",
                                        "src": "7247:10:2"
                                      }
                                    ],
                                    "id": 610,
                                    "name": "IndexAccess",
                                    "src": "7237:21:2"
                                  }
                                ],
                                "id": 611,
                                "name": "MemberAccess",
                                "src": "7237:37:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 612,
                                    "name": "Identifier",
                                    "src": "7278:3:2"
                                  }
                                ],
                                "id": 613,
                                "name": "MemberAccess",
                                "src": "7278:10:2"
                              }
                            ],
                            "id": 614,
                            "name": "BinaryOperation",
                            "src": "7237:51:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "7468697320637573746f6d6572206973206e6f742045786973742e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this customer is not Exist.\"",
                              "value": "this customer is not Exist."
                            },
                            "id": 615,
                            "name": "Literal",
                            "src": "7303:29:2"
                          }
                        ],
                        "id": 616,
                        "name": "FunctionCall",
                        "src": "7229:104:2"
                      }
                    ],
                    "id": 617,
                    "name": "ExpressionStatement",
                    "src": "7229:104:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        619
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "p",
                          "scope": 661,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.Project",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Project",
                              "referencedDeclaration": 174,
                              "type": "struct SmallBusiness.Project"
                            },
                            "id": 618,
                            "name": "UserDefinedTypeName",
                            "src": "7343:7:2"
                          }
                        ],
                        "id": 619,
                        "name": "VariableDeclaration",
                        "src": "7343:17:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 219,
                              "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                              "value": "projects"
                            },
                            "id": 620,
                            "name": "Identifier",
                            "src": "7363:8:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 621,
                                "name": "Identifier",
                                "src": "7372:3:2"
                              }
                            ],
                            "id": 622,
                            "name": "MemberAccess",
                            "src": "7372:10:2"
                          }
                        ],
                        "id": 623,
                        "name": "IndexAccess",
                        "src": "7363:20:2"
                      }
                    ],
                    "id": 624,
                    "name": "VariableDeclarationStatement",
                    "src": "7343:40:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum SmallBusiness.State"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "state",
                              "referencedDeclaration": 167,
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 619,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 625,
                                "name": "Identifier",
                                "src": "7393:1:2"
                              }
                            ],
                            "id": 627,
                            "name": "MemberAccess",
                            "src": "7393:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "Finish",
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 149,
                                  "type": "type(enum SmallBusiness.State)",
                                  "value": "State"
                                },
                                "id": 628,
                                "name": "Identifier",
                                "src": "7403:5:2"
                              }
                            ],
                            "id": 629,
                            "name": "MemberAccess",
                            "src": "7403:12:2"
                          }
                        ],
                        "id": 630,
                        "name": "Assignment",
                        "src": "7393:22:2"
                      }
                    ],
                    "id": 631,
                    "name": "ExpressionStatement",
                    "src": "7393:22:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        633
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "o",
                          "scope": 661,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.offer",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "offer",
                              "referencedDeclaration": 181,
                              "type": "struct SmallBusiness.offer"
                            },
                            "id": 632,
                            "name": "UserDefinedTypeName",
                            "src": "7425:5:2"
                          }
                        ],
                        "id": 633,
                        "name": "VariableDeclaration",
                        "src": "7425:15:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.offer storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 207,
                              "type": "mapping(address => struct SmallBusiness.offer storage ref)",
                              "value": "offers"
                            },
                            "id": 634,
                            "name": "Identifier",
                            "src": "7443:6:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 582,
                              "type": "address payable",
                              "value": "_engineerAddress"
                            },
                            "id": 635,
                            "name": "Identifier",
                            "src": "7450:16:2"
                          }
                        ],
                        "id": 636,
                        "name": "IndexAccess",
                        "src": "7443:24:2"
                      }
                    ],
                    "id": 637,
                    "name": "VariableDeclarationStatement",
                    "src": "7425:42:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        639
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "e",
                          "scope": 661,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.Engineer",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Engineer",
                              "referencedDeclaration": 161,
                              "type": "struct SmallBusiness.Engineer"
                            },
                            "id": 638,
                            "name": "UserDefinedTypeName",
                            "src": "7477:8:2"
                          }
                        ],
                        "id": 639,
                        "name": "VariableDeclaration",
                        "src": "7477:18:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Engineer storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 215,
                              "type": "mapping(address => struct SmallBusiness.Engineer storage ref)",
                              "value": "Engineers"
                            },
                            "id": 640,
                            "name": "Identifier",
                            "src": "7498:9:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 582,
                              "type": "address payable",
                              "value": "_engineerAddress"
                            },
                            "id": 641,
                            "name": "Identifier",
                            "src": "7508:16:2"
                          }
                        ],
                        "id": 642,
                        "name": "IndexAccess",
                        "src": "7498:27:2"
                      }
                    ],
                    "id": 643,
                    "name": "VariableDeclarationStatement",
                    "src": "7477:48:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        645
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "to",
                          "scope": 661,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address payable",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "payable",
                              "type": "address payable"
                            },
                            "id": 644,
                            "name": "ElementaryTypeName",
                            "src": "7535:15:2"
                          }
                        ],
                        "id": 645,
                        "name": "VariableDeclaration",
                        "src": "7535:18:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "engineerAddress",
                          "referencedDeclaration": 156,
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 639,
                              "type": "struct SmallBusiness.Engineer storage pointer",
                              "value": "e"
                            },
                            "id": 646,
                            "name": "Identifier",
                            "src": "7556:1:2"
                          }
                        ],
                        "id": 647,
                        "name": "MemberAccess",
                        "src": "7556:17:2"
                      }
                    ],
                    "id": 648,
                    "name": "VariableDeclarationStatement",
                    "src": "7535:38:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "type": "function (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 645,
                                  "type": "address payable",
                                  "value": "to"
                                },
                                "id": 649,
                                "name": "Identifier",
                                "src": "7584:2:2"
                              }
                            ],
                            "id": 651,
                            "name": "MemberAccess",
                            "src": "7584:11:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "*",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "price",
                                  "referencedDeclaration": 176,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 633,
                                      "type": "struct SmallBusiness.offer storage pointer",
                                      "value": "o"
                                    },
                                    "id": 652,
                                    "name": "Identifier",
                                    "src": "7596:1:2"
                                  }
                                ],
                                "id": 653,
                                "name": "MemberAccess",
                                "src": "7596:7:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "int_const 1000000000000000000"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "hexvalue": "31",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": "ether",
                                      "token": "number",
                                      "type": "int_const 1000000000000000000",
                                      "value": "1"
                                    },
                                    "id": 654,
                                    "name": "Literal",
                                    "src": "7606:7:2"
                                  }
                                ],
                                "id": 655,
                                "name": "TupleExpression",
                                "src": "7605:9:2"
                              }
                            ],
                            "id": 656,
                            "name": "BinaryOperation",
                            "src": "7596:18:2"
                          }
                        ],
                        "id": 657,
                        "name": "FunctionCall",
                        "src": "7584:31:2"
                      }
                    ],
                    "id": 658,
                    "name": "ExpressionStatement",
                    "src": "7584:31:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 595
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 659,
                        "name": "Literal",
                        "src": "7632:4:2"
                      }
                    ],
                    "id": 660,
                    "name": "Return",
                    "src": "7625:11:2"
                  }
                ],
                "id": 661,
                "name": "Block",
                "src": "7089:554:2"
              }
            ],
            "id": 662,
            "name": "FunctionDefinition",
            "src": "6949:694:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                50
              ],
              "functionSelector": "aede6098",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "EditProject",
              "scope": 883,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 672,
                "name": "OverrideSpecifier",
                "src": "7795:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_name",
                      "scope": 732,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 663,
                        "name": "ElementaryTypeName",
                        "src": "7670:6:2"
                      }
                    ],
                    "id": 664,
                    "name": "VariableDeclaration",
                    "src": "7670:19:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_skills",
                      "scope": 732,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 665,
                        "name": "ElementaryTypeName",
                        "src": "7699:6:2"
                      }
                    ],
                    "id": 666,
                    "name": "VariableDeclaration",
                    "src": "7699:21:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_information",
                      "scope": 732,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 667,
                        "name": "ElementaryTypeName",
                        "src": "7730:6:2"
                      }
                    ],
                    "id": 668,
                    "name": "VariableDeclaration",
                    "src": "7730:26:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_averageOfprice",
                      "scope": 732,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 669,
                        "name": "ElementaryTypeName",
                        "src": "7757:4:2"
                      }
                    ],
                    "id": 670,
                    "name": "VariableDeclaration",
                    "src": "7757:20:2"
                  }
                ],
                "id": 671,
                "name": "ParameterList",
                "src": "7669:110:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 732,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 681,
                        "name": "ElementaryTypeName",
                        "src": "7882:6:2"
                      }
                    ],
                    "id": 682,
                    "name": "VariableDeclaration",
                    "src": "7882:13:2"
                  }
                ],
                "id": 683,
                "name": "ParameterList",
                "src": "7881:15:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 232,
                      "type": "modifier (address)",
                      "value": "verifyCaller"
                    },
                    "id": 673,
                    "name": "Identifier",
                    "src": "7812:12:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 674,
                        "name": "Identifier",
                        "src": "7825:3:2"
                      }
                    ],
                    "id": 675,
                    "name": "MemberAccess",
                    "src": "7825:10:2"
                  }
                ],
                "id": 676,
                "name": "ModifierInvocation",
                "src": "7812:24:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 306,
                      "type": "modifier (address)",
                      "value": "forSell"
                    },
                    "id": 677,
                    "name": "Identifier",
                    "src": "7845:7:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 678,
                        "name": "Identifier",
                        "src": "7853:3:2"
                      }
                    ],
                    "id": 679,
                    "name": "MemberAccess",
                    "src": "7853:10:2"
                  }
                ],
                "id": 680,
                "name": "ModifierInvocation",
                "src": "7845:19:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        685
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "p",
                          "scope": 731,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SmallBusiness.Project",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Project",
                              "referencedDeclaration": 174,
                              "type": "struct SmallBusiness.Project"
                            },
                            "id": 684,
                            "name": "UserDefinedTypeName",
                            "src": "7926:7:2"
                          }
                        ],
                        "id": 685,
                        "name": "VariableDeclaration",
                        "src": "7926:16:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 219,
                              "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                              "value": "projects"
                            },
                            "id": 686,
                            "name": "Identifier",
                            "src": "7945:8:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 687,
                                "name": "Identifier",
                                "src": "7954:3:2"
                              }
                            ],
                            "id": 688,
                            "name": "MemberAccess",
                            "src": "7954:10:2"
                          }
                        ],
                        "id": 689,
                        "name": "IndexAccess",
                        "src": "7945:20:2"
                      }
                    ],
                    "id": 690,
                    "name": "VariableDeclarationStatement",
                    "src": "7926:39:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "owner",
                              "referencedDeclaration": 163,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 685,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 691,
                                "name": "Identifier",
                                "src": "7978:1:2"
                              }
                            ],
                            "id": 693,
                            "name": "MemberAccess",
                            "src": "7978:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 694,
                                "name": "Identifier",
                                "src": "7988:3:2"
                              }
                            ],
                            "id": 695,
                            "name": "MemberAccess",
                            "src": "7988:10:2"
                          }
                        ],
                        "id": 696,
                        "name": "Assignment",
                        "src": "7978:20:2"
                      }
                    ],
                    "id": 697,
                    "name": "ExpressionStatement",
                    "src": "7978:20:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "Name",
                              "referencedDeclaration": 165,
                              "type": "string memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 685,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 698,
                                "name": "Identifier",
                                "src": "8011:1:2"
                              }
                            ],
                            "id": 700,
                            "name": "MemberAccess",
                            "src": "8011:6:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 664,
                              "type": "string memory",
                              "value": "_name"
                            },
                            "id": 701,
                            "name": "Identifier",
                            "src": "8020:5:2"
                          }
                        ],
                        "id": 702,
                        "name": "Assignment",
                        "src": "8011:14:2"
                      }
                    ],
                    "id": 703,
                    "name": "ExpressionStatement",
                    "src": "8011:14:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum SmallBusiness.State"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "state",
                              "referencedDeclaration": 167,
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 685,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 704,
                                "name": "Identifier",
                                "src": "8038:1:2"
                              }
                            ],
                            "id": 706,
                            "name": "MemberAccess",
                            "src": "8038:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "member_name": "forSell",
                              "type": "enum SmallBusiness.State"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 149,
                                  "type": "type(enum SmallBusiness.State)",
                                  "value": "State"
                                },
                                "id": 707,
                                "name": "Identifier",
                                "src": "8047:5:2"
                              }
                            ],
                            "id": 708,
                            "name": "MemberAccess",
                            "src": "8047:13:2"
                          }
                        ],
                        "id": 709,
                        "name": "Assignment",
                        "src": "8038:22:2"
                      }
                    ],
                    "id": 710,
                    "name": "ExpressionStatement",
                    "src": "8038:22:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "skills",
                              "referencedDeclaration": 169,
                              "type": "string memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 685,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 711,
                                "name": "Identifier",
                                "src": "8073:1:2"
                              }
                            ],
                            "id": 713,
                            "name": "MemberAccess",
                            "src": "8073:8:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 666,
                              "type": "string memory",
                              "value": "_skills"
                            },
                            "id": 714,
                            "name": "Identifier",
                            "src": "8083:7:2"
                          }
                        ],
                        "id": 715,
                        "name": "Assignment",
                        "src": "8073:17:2"
                      }
                    ],
                    "id": 716,
                    "name": "ExpressionStatement",
                    "src": "8073:17:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string memory"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "information",
                              "referencedDeclaration": 171,
                              "type": "string memory"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 685,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 717,
                                "name": "Identifier",
                                "src": "8103:1:2"
                              }
                            ],
                            "id": 719,
                            "name": "MemberAccess",
                            "src": "8103:13:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 668,
                              "type": "string memory",
                              "value": "_information"
                            },
                            "id": 720,
                            "name": "Identifier",
                            "src": "8119:12:2"
                          }
                        ],
                        "id": 721,
                        "name": "Assignment",
                        "src": "8103:28:2"
                      }
                    ],
                    "id": 722,
                    "name": "ExpressionStatement",
                    "src": "8103:28:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "averageOfprice",
                              "referencedDeclaration": 173,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 685,
                                  "type": "struct SmallBusiness.Project memory",
                                  "value": "p"
                                },
                                "id": 723,
                                "name": "Identifier",
                                "src": "8144:1:2"
                              }
                            ],
                            "id": 725,
                            "name": "MemberAccess",
                            "src": "8144:17:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 670,
                              "type": "uint256",
                              "value": "_averageOfprice"
                            },
                            "id": 726,
                            "name": "Identifier",
                            "src": "8164:15:2"
                          }
                        ],
                        "id": 727,
                        "name": "Assignment",
                        "src": "8144:35:2"
                      }
                    ],
                    "id": 728,
                    "name": "ExpressionStatement",
                    "src": "8144:35:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 683
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "7468652070726f6a6563742077617320757064617465",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"the project was update\"",
                          "value": "the project was update"
                        },
                        "id": 729,
                        "name": "Literal",
                        "src": "8230:24:2"
                      }
                    ],
                    "id": 730,
                    "name": "Return",
                    "src": "8223:31:2"
                  }
                ],
                "id": 731,
                "name": "Block",
                "src": "7908:354:2"
              }
            ],
            "id": 732,
            "name": "FunctionDefinition",
            "src": "7649:613:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                64
              ],
              "functionSelector": "f9870705",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "getProject",
              "scope": 883,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 736,
                "name": "OverrideSpecifier",
                "src": "8356:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 770,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 733,
                        "name": "ElementaryTypeName",
                        "src": "8318:7:2"
                      }
                    ],
                    "id": 734,
                    "name": "VariableDeclaration",
                    "src": "8318:24:2"
                  }
                ],
                "id": 735,
                "name": "ParameterList",
                "src": "8317:26:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "Name",
                      "scope": 770,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 744,
                        "name": "ElementaryTypeName",
                        "src": "8439:6:2"
                      }
                    ],
                    "id": 745,
                    "name": "VariableDeclaration",
                    "src": "8439:18:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "skills",
                      "scope": 770,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 746,
                        "name": "ElementaryTypeName",
                        "src": "8458:6:2"
                      }
                    ],
                    "id": 747,
                    "name": "VariableDeclaration",
                    "src": "8458:20:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "information",
                      "scope": 770,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 748,
                        "name": "ElementaryTypeName",
                        "src": "8484:6:2"
                      }
                    ],
                    "id": 749,
                    "name": "VariableDeclaration",
                    "src": "8484:25:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "averageOfprice",
                      "scope": 770,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 750,
                        "name": "ElementaryTypeName",
                        "src": "8510:4:2"
                      }
                    ],
                    "id": 751,
                    "name": "VariableDeclaration",
                    "src": "8510:19:2"
                  }
                ],
                "id": 752,
                "name": "ParameterList",
                "src": "8438:93:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 232,
                      "type": "modifier (address)",
                      "value": "verifyCaller"
                    },
                    "id": 737,
                    "name": "Identifier",
                    "src": "8370:12:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 738,
                        "name": "Identifier",
                        "src": "8383:3:2"
                      }
                    ],
                    "id": 739,
                    "name": "MemberAccess",
                    "src": "8383:10:2"
                  }
                ],
                "id": 740,
                "name": "ModifierInvocation",
                "src": "8370:24:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 306,
                      "type": "modifier (address)",
                      "value": "forSell"
                    },
                    "id": 741,
                    "name": "Identifier",
                    "src": "8400:7:2"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 734,
                      "type": "address",
                      "value": "_customerAddress"
                    },
                    "id": 742,
                    "name": "Identifier",
                    "src": "8408:16:2"
                  }
                ],
                "id": 743,
                "name": "ModifierInvocation",
                "src": "8400:25:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        754
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "p",
                          "scope": 769,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.Project",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Project",
                              "referencedDeclaration": 174,
                              "type": "struct SmallBusiness.Project"
                            },
                            "id": 753,
                            "name": "UserDefinedTypeName",
                            "src": "8549:7:2"
                          }
                        ],
                        "id": 754,
                        "name": "VariableDeclaration",
                        "src": "8549:17:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 219,
                              "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                              "value": "projects"
                            },
                            "id": 755,
                            "name": "Identifier",
                            "src": "8569:8:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 734,
                              "type": "address",
                              "value": "_customerAddress"
                            },
                            "id": 756,
                            "name": "Identifier",
                            "src": "8578:16:2"
                          }
                        ],
                        "id": 757,
                        "name": "IndexAccess",
                        "src": "8569:26:2"
                      }
                    ],
                    "id": 758,
                    "name": "VariableDeclarationStatement",
                    "src": "8549:46:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 752
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "tuple(string storage ref,string storage ref,string storage ref,uint256)"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "Name",
                              "referencedDeclaration": 165,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 754,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 759,
                                "name": "Identifier",
                                "src": "8613:1:2"
                              }
                            ],
                            "id": 760,
                            "name": "MemberAccess",
                            "src": "8613:6:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "skills",
                              "referencedDeclaration": 169,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 754,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 761,
                                "name": "Identifier",
                                "src": "8620:1:2"
                              }
                            ],
                            "id": 762,
                            "name": "MemberAccess",
                            "src": "8620:8:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "information",
                              "referencedDeclaration": 171,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 754,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 763,
                                "name": "Identifier",
                                "src": "8629:1:2"
                              }
                            ],
                            "id": 764,
                            "name": "MemberAccess",
                            "src": "8629:13:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "averageOfprice",
                              "referencedDeclaration": 173,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 754,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 765,
                                "name": "Identifier",
                                "src": "8643:1:2"
                              }
                            ],
                            "id": 766,
                            "name": "MemberAccess",
                            "src": "8643:16:2"
                          }
                        ],
                        "id": 767,
                        "name": "TupleExpression",
                        "src": "8612:50:2"
                      }
                    ],
                    "id": 768,
                    "name": "Return",
                    "src": "8605:57:2"
                  }
                ],
                "id": 769,
                "name": "Block",
                "src": "8539:131:2"
              }
            ],
            "id": 770,
            "name": "FunctionDefinition",
            "src": "8298:372:2"
          },
          {
            "attributes": {
              "baseFunctions": [
                94
              ],
              "functionSelector": "2200e21e",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "deleteProject",
              "scope": 883,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "overrides": [
                    null
                  ]
                },
                "id": 774,
                "name": "OverrideSpecifier",
                "src": "8794:8:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_customerAddress",
                      "scope": 824,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 771,
                        "name": "ElementaryTypeName",
                        "src": "8756:7:2"
                      }
                    ],
                    "id": 772,
                    "name": "VariableDeclaration",
                    "src": "8756:24:2"
                  }
                ],
                "id": 773,
                "name": "ParameterList",
                "src": "8755:26:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 824,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 779,
                        "name": "ElementaryTypeName",
                        "src": "8844:6:2"
                      }
                    ],
                    "id": 780,
                    "name": "VariableDeclaration",
                    "src": "8844:13:2"
                  }
                ],
                "id": 781,
                "name": "ParameterList",
                "src": "8843:15:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 260,
                      "type": "modifier (address)",
                      "value": "isCustomer"
                    },
                    "id": 775,
                    "name": "Identifier",
                    "src": "8808:10:2"
                  },
                  {
                    "attributes": {
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "member_name": "sender",
                      "type": "address payable"
                    },
                    "children": [
                      {
                        "attributes": {
                          "overloadedDeclarations": [
                            null
                          ],
                          "referencedDeclaration": 4294967281,
                          "type": "msg",
                          "value": "msg"
                        },
                        "id": 776,
                        "name": "Identifier",
                        "src": "8819:3:2"
                      }
                    ],
                    "id": 777,
                    "name": "MemberAccess",
                    "src": "8819:10:2"
                  }
                ],
                "id": 778,
                "name": "ModifierInvocation",
                "src": "8808:22:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        783
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "p",
                          "scope": 823,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.Project",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Project",
                              "referencedDeclaration": 174,
                              "type": "struct SmallBusiness.Project"
                            },
                            "id": 782,
                            "name": "UserDefinedTypeName",
                            "src": "8869:7:2"
                          }
                        ],
                        "id": 783,
                        "name": "VariableDeclaration",
                        "src": "8869:17:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 219,
                              "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                              "value": "projects"
                            },
                            "id": 784,
                            "name": "Identifier",
                            "src": "8889:8:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 772,
                              "type": "address",
                              "value": "_customerAddress"
                            },
                            "id": 785,
                            "name": "Identifier",
                            "src": "8898:16:2"
                          }
                        ],
                        "id": 786,
                        "name": "IndexAccess",
                        "src": "8889:26:2"
                      }
                    ],
                    "id": 787,
                    "name": "VariableDeclarationStatement",
                    "src": "8869:46:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "owner",
                              "referencedDeclaration": 163,
                              "type": "address"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 783,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 788,
                                "name": "Identifier",
                                "src": "8925:1:2"
                              }
                            ],
                            "id": 790,
                            "name": "MemberAccess",
                            "src": "8925:7:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 791,
                                    "name": "ElementaryTypeName",
                                    "src": "8934:7:2"
                                  }
                                ],
                                "id": 792,
                                "name": "ElementaryTypeNameExpression",
                                "src": "8934:7:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 793,
                                "name": "Literal",
                                "src": "8942:1:2"
                              }
                            ],
                            "id": 794,
                            "name": "FunctionCall",
                            "src": "8934:10:2"
                          }
                        ],
                        "id": 795,
                        "name": "Assignment",
                        "src": "8925:19:2"
                      }
                    ],
                    "id": 796,
                    "name": "ExpressionStatement",
                    "src": "8925:19:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "Name",
                              "referencedDeclaration": 165,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 783,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 797,
                                "name": "Identifier",
                                "src": "8954:1:2"
                              }
                            ],
                            "id": 799,
                            "name": "MemberAccess",
                            "src": "8954:6:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "20",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \" \"",
                              "value": " "
                            },
                            "id": 800,
                            "name": "Literal",
                            "src": "8963:3:2"
                          }
                        ],
                        "id": 801,
                        "name": "Assignment",
                        "src": "8954:12:2"
                      }
                    ],
                    "id": 802,
                    "name": "ExpressionStatement",
                    "src": "8954:12:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "skills",
                              "referencedDeclaration": 169,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 783,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 803,
                                "name": "Identifier",
                                "src": "8976:1:2"
                              }
                            ],
                            "id": 805,
                            "name": "MemberAccess",
                            "src": "8976:8:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "20",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \" \"",
                              "value": " "
                            },
                            "id": 806,
                            "name": "Literal",
                            "src": "8987:3:2"
                          }
                        ],
                        "id": 807,
                        "name": "Assignment",
                        "src": "8976:14:2"
                      }
                    ],
                    "id": 808,
                    "name": "ExpressionStatement",
                    "src": "8976:14:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "information",
                              "referencedDeclaration": 171,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 783,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 809,
                                "name": "Identifier",
                                "src": "9000:1:2"
                              }
                            ],
                            "id": 811,
                            "name": "MemberAccess",
                            "src": "9000:13:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "20",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \" \"",
                              "value": " "
                            },
                            "id": 812,
                            "name": "Literal",
                            "src": "9016:3:2"
                          }
                        ],
                        "id": 813,
                        "name": "Assignment",
                        "src": "9000:19:2"
                      }
                    ],
                    "id": 814,
                    "name": "ExpressionStatement",
                    "src": "9000:19:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "averageOfprice",
                              "referencedDeclaration": 173,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 783,
                                  "type": "struct SmallBusiness.Project storage pointer",
                                  "value": "p"
                                },
                                "id": 815,
                                "name": "Identifier",
                                "src": "9029:1:2"
                              }
                            ],
                            "id": 817,
                            "name": "MemberAccess",
                            "src": "9029:16:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 818,
                            "name": "Literal",
                            "src": "9048:1:2"
                          }
                        ],
                        "id": 819,
                        "name": "Assignment",
                        "src": "9029:20:2"
                      }
                    ],
                    "id": 820,
                    "name": "ExpressionStatement",
                    "src": "9029:20:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 781
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "7468652070726f6a656374207761732064656c657465",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"the project was delete\"",
                          "value": "the project was delete"
                        },
                        "id": 821,
                        "name": "Literal",
                        "src": "9076:24:2"
                      }
                    ],
                    "id": 822,
                    "name": "Return",
                    "src": "9069:31:2"
                  }
                ],
                "id": 823,
                "name": "Block",
                "src": "8858:250:2"
              }
            ],
            "id": 824,
            "name": "FunctionDefinition",
            "src": "8733:375:2"
          },
          {
            "attributes": {
              "functionSelector": "cea1a67a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_passthevalue",
              "scope": 883,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 825,
                "name": "ParameterList",
                "src": "9359:2:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 870,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 826,
                        "name": "ElementaryTypeName",
                        "src": "9377:6:2"
                      }
                    ],
                    "id": 827,
                    "name": "VariableDeclaration",
                    "src": "9377:13:2"
                  }
                ],
                "id": 828,
                "name": "ParameterList",
                "src": "9376:15:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        830
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "p",
                          "scope": 869,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct SmallBusiness.Project",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "Project",
                              "referencedDeclaration": 174,
                              "type": "struct SmallBusiness.Project"
                            },
                            "id": 829,
                            "name": "UserDefinedTypeName",
                            "src": "9401:7:2"
                          }
                        ],
                        "id": 830,
                        "name": "VariableDeclaration",
                        "src": "9401:17:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct SmallBusiness.Project storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 219,
                              "type": "mapping(address => struct SmallBusiness.Project storage ref)",
                              "value": "projects"
                            },
                            "id": 831,
                            "name": "Identifier",
                            "src": "9421:8:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 832,
                                "name": "Identifier",
                                "src": "9430:3:2"
                              }
                            ],
                            "id": 833,
                            "name": "MemberAccess",
                            "src": "9430:10:2"
                          }
                        ],
                        "id": 834,
                        "name": "IndexAccess",
                        "src": "9421:20:2"
                      }
                    ],
                    "id": 835,
                    "name": "VariableDeclarationStatement",
                    "src": "9401:40:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e20e1579c4ddb32976d29829607291694b179a8b9e0b6062028dba84be81b25d",
                                  "typeString": "literal_string \"this project was not finish\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 836,
                            "name": "Identifier",
                            "src": "9451:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_State_$149",
                                "typeString": "enum SmallBusiness.State"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "state",
                                  "referencedDeclaration": 167,
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 830,
                                      "type": "struct SmallBusiness.Project storage pointer",
                                      "value": "p"
                                    },
                                    "id": 837,
                                    "name": "Identifier",
                                    "src": "9459:1:2"
                                  }
                                ],
                                "id": 838,
                                "name": "MemberAccess",
                                "src": "9459:7:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Finish",
                                  "type": "enum SmallBusiness.State"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 149,
                                      "type": "type(enum SmallBusiness.State)",
                                      "value": "State"
                                    },
                                    "id": 839,
                                    "name": "Identifier",
                                    "src": "9470:5:2"
                                  }
                                ],
                                "id": 840,
                                "name": "MemberAccess",
                                "src": "9470:12:2"
                              }
                            ],
                            "id": 841,
                            "name": "BinaryOperation",
                            "src": "9459:23:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "746869732070726f6a65637420776173206e6f742066696e697368",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"this project was not finish\"",
                              "value": "this project was not finish"
                            },
                            "id": 842,
                            "name": "Literal",
                            "src": "9484:29:2"
                          }
                        ],
                        "id": 843,
                        "name": "FunctionCall",
                        "src": "9451:63:2"
                      }
                    ],
                    "id": 844,
                    "name": "ExpressionStatement",
                    "src": "9451:63:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        846
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "to",
                          "scope": 869,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "address payable",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "address",
                              "stateMutability": "payable",
                              "type": "address payable"
                            },
                            "id": 845,
                            "name": "ElementaryTypeName",
                            "src": "9524:15:2"
                          }
                        ],
                        "id": 846,
                        "name": "VariableDeclaration",
                        "src": "9524:18:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "customerAddress",
                          "referencedDeclaration": 151,
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "struct SmallBusiness.customer storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 211,
                                  "type": "mapping(address => struct SmallBusiness.customer storage ref)",
                                  "value": "customers"
                                },
                                "id": 847,
                                "name": "Identifier",
                                "src": "9545:9:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4294967281,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 848,
                                    "name": "Identifier",
                                    "src": "9555:3:2"
                                  }
                                ],
                                "id": 849,
                                "name": "MemberAccess",
                                "src": "9555:10:2"
                              }
                            ],
                            "id": 850,
                            "name": "IndexAccess",
                            "src": "9545:21:2"
                          }
                        ],
                        "id": 851,
                        "name": "MemberAccess",
                        "src": "9545:37:2"
                      }
                    ],
                    "id": 852,
                    "name": "VariableDeclarationStatement",
                    "src": "9524:58:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        854
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "value",
                          "scope": 869,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 853,
                            "name": "ElementaryTypeName",
                            "src": "9594:4:2"
                          }
                        ],
                        "id": 854,
                        "name": "VariableDeclaration",
                        "src": "9594:10:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "balance",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SmallBusiness_$883",
                                      "typeString": "contract SmallBusiness"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 855,
                                    "name": "ElementaryTypeName",
                                    "src": "9607:7:2"
                                  }
                                ],
                                "id": 856,
                                "name": "ElementaryTypeNameExpression",
                                "src": "9607:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract SmallBusiness",
                                  "value": "this"
                                },
                                "id": 857,
                                "name": "Identifier",
                                "src": "9615:4:2"
                              }
                            ],
                            "id": 858,
                            "name": "FunctionCall",
                            "src": "9607:13:2"
                          }
                        ],
                        "id": 859,
                        "name": "MemberAccess",
                        "src": "9607:21:2"
                      }
                    ],
                    "id": 860,
                    "name": "VariableDeclarationStatement",
                    "src": "9594:34:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "type": "function (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 846,
                                  "type": "address payable",
                                  "value": "to"
                                },
                                "id": 861,
                                "name": "Identifier",
                                "src": "9638:2:2"
                              }
                            ],
                            "id": 863,
                            "name": "MemberAccess",
                            "src": "9638:11:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 854,
                              "type": "uint256",
                              "value": "value"
                            },
                            "id": 864,
                            "name": "Identifier",
                            "src": "9650:5:2"
                          }
                        ],
                        "id": 865,
                        "name": "FunctionCall",
                        "src": "9638:18:2"
                      }
                    ],
                    "id": 866,
                    "name": "ExpressionStatement",
                    "src": "9638:18:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 828
                    },
                    "children": [
                      {
                        "attributes": {
                          "hexvalue": "7468652076616c75652069732072657475726e",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "token": "string",
                          "type": "literal_string \"the value is return\"",
                          "value": "the value is return"
                        },
                        "id": 867,
                        "name": "Literal",
                        "src": "9673:21:2"
                      }
                    ],
                    "id": 868,
                    "name": "Return",
                    "src": "9666:28:2"
                  }
                ],
                "id": 869,
                "name": "Block",
                "src": "9391:310:2"
              }
            ],
            "id": 870,
            "name": "FunctionDefinition",
            "src": "9337:364:2"
          },
          {
            "attributes": {
              "functionSelector": "12065fe0",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getBalance",
              "scope": 883,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 871,
                "name": "ParameterList",
                "src": "9726:2:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 882,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 872,
                        "name": "ElementaryTypeName",
                        "src": "9751:4:2"
                      }
                    ],
                    "id": 873,
                    "name": "VariableDeclaration",
                    "src": "9751:4:2"
                  }
                ],
                "id": 874,
                "name": "ParameterList",
                "src": "9750:6:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 874
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "balance",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SmallBusiness_$883",
                                      "typeString": "contract SmallBusiness"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 875,
                                    "name": "ElementaryTypeName",
                                    "src": "9773:7:2"
                                  }
                                ],
                                "id": 876,
                                "name": "ElementaryTypeNameExpression",
                                "src": "9773:7:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract SmallBusiness",
                                  "value": "this"
                                },
                                "id": 877,
                                "name": "Identifier",
                                "src": "9781:4:2"
                              }
                            ],
                            "id": 878,
                            "name": "FunctionCall",
                            "src": "9773:13:2"
                          }
                        ],
                        "id": 879,
                        "name": "MemberAccess",
                        "src": "9773:21:2"
                      }
                    ],
                    "id": 880,
                    "name": "Return",
                    "src": "9766:28:2"
                  }
                ],
                "id": 881,
                "name": "Block",
                "src": "9756:45:2"
              }
            ],
            "id": 882,
            "name": "FunctionDefinition",
            "src": "9707:94:2"
          }
        ],
        "id": 883,
        "name": "ContractDefinition",
        "src": "737:9068:2"
      }
    ],
    "id": 884,
    "name": "SourceUnit",
    "src": "33:9772:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xc90a5997158125d11f471581d0f9c698a86d5f9b21d81eccee8f78d4d37327c1": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_customerAddress",
              "type": "address"
            }
          ],
          "name": "PostProject",
          "type": "event"
        },
        "0x140ba8a8a70ea6896f415e662fe4a3493133537db4dcd56586070e42253d9b43": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_customerAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "chooseTheProject",
          "type": "event"
        },
        "0x67db2594560e9767e8eec7f82a7ee7777909a9c55f1dc6ba490d7ef45ffcecfd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "logAddCustomer",
          "type": "event"
        },
        "0x9cd3b8c22eaf60823d8598cfb11eba80932bdb7e58442e690e6368677ac81593": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "name": "logAddEngineers",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x908e88C59652E0EAa329e6c4455abfB5C9BB2B86",
      "transactionHash": "0xeaa4a1d1b7f27743953edfe3af6a019275483134fb5fa332e9fdbef2dc3ff201"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2022-01-10T18:07:09.863Z",
  "networkType": "ethereum",
  "devdoc": {
    "events": {
      "PostProject(address)": {
        "params": {
          "_customerAddress": "is the address of Project"
        }
      },
      "chooseTheProject(address,uint256)": {
        "params": {
          "_customerAddress": "is the address of Project",
          "price": "is the price that customer send to Engineer"
        }
      },
      "logAddCustomer(address)": {
        "params": {
          "_address": "Engineer address"
        }
      },
      "logAddEngineers(address)": {
        "params": {
          "_address": "customer address"
        }
      }
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "PostProject(address)": {
        "notice": "Emitted when a Project is posted "
      },
      "chooseTheProject(address,uint256)": {
        "notice": "Emitted when Engineer add a price for working on project "
      },
      "logAddCustomer(address)": {
        "notice": "Emitted when a Engineer is registred "
      },
      "logAddEngineers(address)": {
        "notice": "Emitted when a customer is registred "
      }
    },
    "kind": "user",
    "methods": {
      "accepteCustomer(address)": {
        "notice": "Allows a customer for view the price of the project that engineer add it and payed that price."
      },
      "addCustomer(address,string)": {
        "notice": "Allows to add a new customer in the network."
      },
      "addEngineer(address,string)": {
        "notice": "Allows to add a new engineer in the network."
      },
      "addProject(string,string,string,uint256)": {
        "notice": "add Project`s id in to mapping check the state of project should be forSell check the modifier is customer to call that function  the customer should call that function"
      },
      "deleteProject(address)": {
        "notice": "Allows the customer for delete the project"
      },
      "getProject(address)": {
        "notice": "Allows a Engineer and customer and users for view the project."
      }
    },
    "version": 1
  }
}